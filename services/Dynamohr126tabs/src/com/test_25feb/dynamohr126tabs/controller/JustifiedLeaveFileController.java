/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import com.test_25feb.dynamohr126tabs.service.JustifiedLeaveFileService;


import java.io.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.hibernate.TypeMismatchException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.util.WMMultipartUtils;
import com.wavemaker.runtime.util.WMRuntimeUtils;
import com.wavemaker.runtime.file.model.DownloadResponse;
import com.wordnik.swagger.annotations.*;

import com.test_25feb.dynamohr126tabs.*;
import com.test_25feb.dynamohr126tabs.service.*;


/**
 * Controller object for domain model class JustifiedLeaveFile.
 * @see com.test_25feb.dynamohr126tabs.JustifiedLeaveFile
 */

@RestController(value = "Dynamohr126tabs.JustifiedLeaveFileController")
@Api(value = "/Dynamohr126tabs/JustifiedLeaveFile", description = "Exposes APIs to work with JustifiedLeaveFile resource.")
@RequestMapping("/Dynamohr126tabs/JustifiedLeaveFile")
public class JustifiedLeaveFileController {

    private static final Logger LOGGER = LoggerFactory.getLogger(JustifiedLeaveFileController.class);

	@Autowired
	@Qualifier("Dynamohr126tabs.JustifiedLeaveFileService")
	private JustifiedLeaveFileService justifiedLeaveFileService;


	@RequestMapping(value = "/search", method = RequestMethod.POST)
	@ApiOperation(value = "Returns the list of JustifiedLeaveFile instances matching the search criteria.")
	public Page<JustifiedLeaveFile> findJustifiedLeaveFiles( Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
		LOGGER.debug("Rendering JustifiedLeaveFiles list");
		return justifiedLeaveFileService.findAll(queryFilters, pageable);
	}

	@RequestMapping(value = "/", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the list of JustifiedLeaveFile instances.")
	public Page<JustifiedLeaveFile> getJustifiedLeaveFiles(Pageable pageable) {
		LOGGER.debug("Rendering JustifiedLeaveFiles list");
		return justifiedLeaveFileService.findAll(pageable);
	}

	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the total count of JustifiedLeaveFile instances.")
	public Long countAllJustifiedLeaveFiles() {
		LOGGER.debug("counting JustifiedLeaveFiles");
		Long count = justifiedLeaveFileService.countAll();
		return count;
	}


    @RequestMapping(value = "/{id:.+}", method = RequestMethod.GET)
    @ApiOperation(value = "Returns the JustifiedLeaveFile instance associated with the given id.")
    public JustifiedLeaveFile getJustifiedLeaveFile(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Getting JustifiedLeaveFile with id: {}" , id);
        JustifiedLeaveFile instance = justifiedLeaveFileService.findById(id);
        LOGGER.debug("JustifiedLeaveFile details with id: {}" , instance);
        return instance;
    }
    @RequestMapping(value = "/{id:.+}", method = RequestMethod.DELETE)
    @ApiOperation(value = "Deletes the JustifiedLeaveFile instance associated with the given id.")
    public boolean deleteJustifiedLeaveFile(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Deleting JustifiedLeaveFile with id: {}" , id);
        JustifiedLeaveFile deleted = justifiedLeaveFileService.delete(id);
        return deleted != null;
    }

    @RequestMapping(value = "/{id:.+}", method = RequestMethod.PUT)
    @ApiOperation(value = "Updates the JustifiedLeaveFile instance associated with the given id.")
    public JustifiedLeaveFile editJustifiedLeaveFile(@PathVariable("id") Integer id, @RequestBody JustifiedLeaveFile instance) throws EntityNotFoundException {
        LOGGER.debug("Editing JustifiedLeaveFile with id: {}" , instance.getIdJustifiedLeaveFile());
        instance.setIdJustifiedLeaveFile(id);
        instance = justifiedLeaveFileService.update(instance);
        LOGGER.debug("JustifiedLeaveFile details with id: {}" , instance);
        return instance;
    }




	@RequestMapping(value = "/", method = RequestMethod.POST)
	@ApiOperation(value = "Creates a new JustifiedLeaveFile instance.")
	public JustifiedLeaveFile createJustifiedLeaveFile(@RequestBody JustifiedLeaveFile instance) {
		LOGGER.debug("Create JustifiedLeaveFile with information: {}" , instance);
		instance = justifiedLeaveFileService.create(instance);
		LOGGER.debug("Created JustifiedLeaveFile with information: {}" , instance);
	    return instance;
	}

	/**
	 * This setter method should only be used by unit tests
	 * 
	 * @param service
	 */
	protected void setJustifiedLeaveFileService(JustifiedLeaveFileService service) {
		this.justifiedLeaveFileService = service;
	}
}

