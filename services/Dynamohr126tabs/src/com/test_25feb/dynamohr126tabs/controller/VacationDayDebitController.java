/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import com.test_25feb.dynamohr126tabs.service.VacationDayDebitService;


import java.io.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.hibernate.TypeMismatchException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.util.WMMultipartUtils;
import com.wavemaker.runtime.util.WMRuntimeUtils;
import com.wavemaker.runtime.file.model.DownloadResponse;
import com.wordnik.swagger.annotations.*;

import com.test_25feb.dynamohr126tabs.*;
import com.test_25feb.dynamohr126tabs.service.*;


/**
 * Controller object for domain model class VacationDayDebit.
 * @see com.test_25feb.dynamohr126tabs.VacationDayDebit
 */

@RestController(value = "Dynamohr126tabs.VacationDayDebitController")
@Api(value = "/Dynamohr126tabs/VacationDayDebit", description = "Exposes APIs to work with VacationDayDebit resource.")
@RequestMapping("/Dynamohr126tabs/VacationDayDebit")
public class VacationDayDebitController {

    private static final Logger LOGGER = LoggerFactory.getLogger(VacationDayDebitController.class);

	@Autowired
	@Qualifier("Dynamohr126tabs.VacationDayDebitService")
	private VacationDayDebitService vacationDayDebitService;


	@RequestMapping(value = "/search", method = RequestMethod.POST)
	@ApiOperation(value = "Returns the list of VacationDayDebit instances matching the search criteria.")
	public Page<VacationDayDebit> findVacationDayDebits( Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
		LOGGER.debug("Rendering VacationDayDebits list");
		return vacationDayDebitService.findAll(queryFilters, pageable);
	}

	@RequestMapping(value = "/", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the list of VacationDayDebit instances.")
	public Page<VacationDayDebit> getVacationDayDebits(Pageable pageable) {
		LOGGER.debug("Rendering VacationDayDebits list");
		return vacationDayDebitService.findAll(pageable);
	}

	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the total count of VacationDayDebit instances.")
	public Long countAllVacationDayDebits() {
		LOGGER.debug("counting VacationDayDebits");
		Long count = vacationDayDebitService.countAll();
		return count;
	}


    @RequestMapping(value = "/{id:.+}", method = RequestMethod.GET)
    @ApiOperation(value = "Returns the VacationDayDebit instance associated with the given id.")
    public VacationDayDebit getVacationDayDebit(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Getting VacationDayDebit with id: {}" , id);
        VacationDayDebit instance = vacationDayDebitService.findById(id);
        LOGGER.debug("VacationDayDebit details with id: {}" , instance);
        return instance;
    }
    @RequestMapping(value = "/{id:.+}", method = RequestMethod.DELETE)
    @ApiOperation(value = "Deletes the VacationDayDebit instance associated with the given id.")
    public boolean deleteVacationDayDebit(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Deleting VacationDayDebit with id: {}" , id);
        VacationDayDebit deleted = vacationDayDebitService.delete(id);
        return deleted != null;
    }

    @RequestMapping(value = "/{id:.+}", method = RequestMethod.PUT)
    @ApiOperation(value = "Updates the VacationDayDebit instance associated with the given id.")
    public VacationDayDebit editVacationDayDebit(@PathVariable("id") Integer id, @RequestBody VacationDayDebit instance) throws EntityNotFoundException {
        LOGGER.debug("Editing VacationDayDebit with id: {}" , instance.getIdVacationDayDebit());
        instance.setIdVacationDayDebit(id);
        instance = vacationDayDebitService.update(instance);
        LOGGER.debug("VacationDayDebit details with id: {}" , instance);
        return instance;
    }




	@RequestMapping(value = "/", method = RequestMethod.POST)
	@ApiOperation(value = "Creates a new VacationDayDebit instance.")
	public VacationDayDebit createVacationDayDebit(@RequestBody VacationDayDebit instance) {
		LOGGER.debug("Create VacationDayDebit with information: {}" , instance);
		instance = vacationDayDebitService.create(instance);
		LOGGER.debug("Created VacationDayDebit with information: {}" , instance);
	    return instance;
	}

	/**
	 * This setter method should only be used by unit tests
	 * 
	 * @param service
	 */
	protected void setVacationDayDebitService(VacationDayDebitService service) {
		this.vacationDayDebitService = service;
	}
}

