/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import com.test_25feb.dynamohr126tabs.service.VacationDayCreditService;


import java.io.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.hibernate.TypeMismatchException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.util.WMMultipartUtils;
import com.wavemaker.runtime.util.WMRuntimeUtils;
import com.wavemaker.runtime.file.model.DownloadResponse;
import com.wordnik.swagger.annotations.*;

import com.test_25feb.dynamohr126tabs.*;
import com.test_25feb.dynamohr126tabs.service.*;


/**
 * Controller object for domain model class VacationDayCredit.
 * @see com.test_25feb.dynamohr126tabs.VacationDayCredit
 */

@RestController(value = "Dynamohr126tabs.VacationDayCreditController")
@Api(value = "/Dynamohr126tabs/VacationDayCredit", description = "Exposes APIs to work with VacationDayCredit resource.")
@RequestMapping("/Dynamohr126tabs/VacationDayCredit")
public class VacationDayCreditController {

    private static final Logger LOGGER = LoggerFactory.getLogger(VacationDayCreditController.class);

	@Autowired
	@Qualifier("Dynamohr126tabs.VacationDayCreditService")
	private VacationDayCreditService vacationDayCreditService;


	@RequestMapping(value = "/search", method = RequestMethod.POST)
	@ApiOperation(value = "Returns the list of VacationDayCredit instances matching the search criteria.")
	public Page<VacationDayCredit> findVacationDayCredits( Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
		LOGGER.debug("Rendering VacationDayCredits list");
		return vacationDayCreditService.findAll(queryFilters, pageable);
	}

	@RequestMapping(value = "/", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the list of VacationDayCredit instances.")
	public Page<VacationDayCredit> getVacationDayCredits(Pageable pageable) {
		LOGGER.debug("Rendering VacationDayCredits list");
		return vacationDayCreditService.findAll(pageable);
	}

	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the total count of VacationDayCredit instances.")
	public Long countAllVacationDayCredits() {
		LOGGER.debug("counting VacationDayCredits");
		Long count = vacationDayCreditService.countAll();
		return count;
	}


    @RequestMapping(value = "/{id:.+}", method = RequestMethod.GET)
    @ApiOperation(value = "Returns the VacationDayCredit instance associated with the given id.")
    public VacationDayCredit getVacationDayCredit(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Getting VacationDayCredit with id: {}" , id);
        VacationDayCredit instance = vacationDayCreditService.findById(id);
        LOGGER.debug("VacationDayCredit details with id: {}" , instance);
        return instance;
    }
    @RequestMapping(value = "/{id:.+}", method = RequestMethod.DELETE)
    @ApiOperation(value = "Deletes the VacationDayCredit instance associated with the given id.")
    public boolean deleteVacationDayCredit(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Deleting VacationDayCredit with id: {}" , id);
        VacationDayCredit deleted = vacationDayCreditService.delete(id);
        return deleted != null;
    }

    @RequestMapping(value = "/{id:.+}", method = RequestMethod.PUT)
    @ApiOperation(value = "Updates the VacationDayCredit instance associated with the given id.")
    public VacationDayCredit editVacationDayCredit(@PathVariable("id") Integer id, @RequestBody VacationDayCredit instance) throws EntityNotFoundException {
        LOGGER.debug("Editing VacationDayCredit with id: {}" , instance.getIdVacationDayCredit());
        instance.setIdVacationDayCredit(id);
        instance = vacationDayCreditService.update(instance);
        LOGGER.debug("VacationDayCredit details with id: {}" , instance);
        return instance;
    }




	@RequestMapping(value = "/", method = RequestMethod.POST)
	@ApiOperation(value = "Creates a new VacationDayCredit instance.")
	public VacationDayCredit createVacationDayCredit(@RequestBody VacationDayCredit instance) {
		LOGGER.debug("Create VacationDayCredit with information: {}" , instance);
		instance = vacationDayCreditService.create(instance);
		LOGGER.debug("Created VacationDayCredit with information: {}" , instance);
	    return instance;
	}

	/**
	 * This setter method should only be used by unit tests
	 * 
	 * @param service
	 */
	protected void setVacationDayCreditService(VacationDayCreditService service) {
		this.vacationDayCreditService = service;
	}
}

