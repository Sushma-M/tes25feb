/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import com.test_25feb.dynamohr126tabs.service.ListPeriodicBonusPayrollService;


import java.io.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.hibernate.TypeMismatchException;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.util.WMMultipartUtils;
import com.wavemaker.runtime.util.WMRuntimeUtils;
import com.wavemaker.runtime.file.model.DownloadResponse;
import com.wordnik.swagger.annotations.*;

import com.test_25feb.dynamohr126tabs.*;
import com.test_25feb.dynamohr126tabs.service.*;


/**
 * Controller object for domain model class ListPeriodicBonusPayroll.
 * @see com.test_25feb.dynamohr126tabs.ListPeriodicBonusPayroll
 */

@RestController(value = "Dynamohr126tabs.ListPeriodicBonusPayrollController")
@Api(value = "/Dynamohr126tabs/ListPeriodicBonusPayroll", description = "Exposes APIs to work with ListPeriodicBonusPayroll resource.")
@RequestMapping("/Dynamohr126tabs/ListPeriodicBonusPayroll")
public class ListPeriodicBonusPayrollController {

    private static final Logger LOGGER = LoggerFactory.getLogger(ListPeriodicBonusPayrollController.class);

	@Autowired
	@Qualifier("Dynamohr126tabs.ListPeriodicBonusPayrollService")
	private ListPeriodicBonusPayrollService listPeriodicBonusPayrollService;


	@RequestMapping(value = "/search", method = RequestMethod.POST)
	@ApiOperation(value = "Returns the list of ListPeriodicBonusPayroll instances matching the search criteria.")
	public Page<ListPeriodicBonusPayroll> findListPeriodicBonusPayrolls( Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
		LOGGER.debug("Rendering ListPeriodicBonusPayrolls list");
		return listPeriodicBonusPayrollService.findAll(queryFilters, pageable);
	}

	@RequestMapping(value = "/", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the list of ListPeriodicBonusPayroll instances.")
	public Page<ListPeriodicBonusPayroll> getListPeriodicBonusPayrolls(Pageable pageable) {
		LOGGER.debug("Rendering ListPeriodicBonusPayrolls list");
		return listPeriodicBonusPayrollService.findAll(pageable);
	}

	@RequestMapping(value = "/count", method = RequestMethod.GET)
	@ApiOperation(value = "Returns the total count of ListPeriodicBonusPayroll instances.")
	public Long countAllListPeriodicBonusPayrolls() {
		LOGGER.debug("counting ListPeriodicBonusPayrolls");
		Long count = listPeriodicBonusPayrollService.countAll();
		return count;
	}


    @RequestMapping(value = "/{id:.+}", method = RequestMethod.GET)
    @ApiOperation(value = "Returns the ListPeriodicBonusPayroll instance associated with the given id.")
    public ListPeriodicBonusPayroll getListPeriodicBonusPayroll(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Getting ListPeriodicBonusPayroll with id: {}" , id);
        ListPeriodicBonusPayroll instance = listPeriodicBonusPayrollService.findById(id);
        LOGGER.debug("ListPeriodicBonusPayroll details with id: {}" , instance);
        return instance;
    }
    @RequestMapping(value = "/{id:.+}", method = RequestMethod.DELETE)
    @ApiOperation(value = "Deletes the ListPeriodicBonusPayroll instance associated with the given id.")
    public boolean deleteListPeriodicBonusPayroll(@PathVariable("id") Integer id) throws EntityNotFoundException {
        LOGGER.debug("Deleting ListPeriodicBonusPayroll with id: {}" , id);
        ListPeriodicBonusPayroll deleted = listPeriodicBonusPayrollService.delete(id);
        return deleted != null;
    }

    @RequestMapping(value = "/{id:.+}", method = RequestMethod.PUT)
    @ApiOperation(value = "Updates the ListPeriodicBonusPayroll instance associated with the given id.")
    public ListPeriodicBonusPayroll editListPeriodicBonusPayroll(@PathVariable("id") Integer id, @RequestBody ListPeriodicBonusPayroll instance) throws EntityNotFoundException {
        LOGGER.debug("Editing ListPeriodicBonusPayroll with id: {}" , instance.getIdListPeriodicBonusPayroll());
        instance.setIdListPeriodicBonusPayroll(id);
        instance = listPeriodicBonusPayrollService.update(instance);
        LOGGER.debug("ListPeriodicBonusPayroll details with id: {}" , instance);
        return instance;
    }




	@RequestMapping(value = "/", method = RequestMethod.POST)
	@ApiOperation(value = "Creates a new ListPeriodicBonusPayroll instance.")
	public ListPeriodicBonusPayroll createListPeriodicBonusPayroll(@RequestBody ListPeriodicBonusPayroll instance) {
		LOGGER.debug("Create ListPeriodicBonusPayroll with information: {}" , instance);
		instance = listPeriodicBonusPayrollService.create(instance);
		LOGGER.debug("Created ListPeriodicBonusPayroll with information: {}" , instance);
	    return instance;
	}

	/**
	 * This setter method should only be used by unit tests
	 * 
	 * @param service
	 */
	protected void setListPeriodicBonusPayrollService(ListPeriodicBonusPayrollService service) {
		this.listPeriodicBonusPayrollService = service;
	}
}

