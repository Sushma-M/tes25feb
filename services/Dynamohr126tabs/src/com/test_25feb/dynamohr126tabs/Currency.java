/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Currency generated by hbm2java
 */
@Entity
@Table(name="`currency`"
)

public class Currency  implements java.io.Serializable {

    private Integer idCurrency;
    private Boolean enable;
    private String nombre;
    private String name;
    private String iso;
    private Integer modUser;
    private Date modDate;
    private Set<ListCommissionPayroll> listCommissionPayrolls = new HashSet<ListCommissionPayroll>(0);
    private Set<ListPeriodicDeductionPayroll> listPeriodicDeductionPayrolls = new HashSet<ListPeriodicDeductionPayroll>(0);
    private Set<ListPeriodicBonusPayroll> listPeriodicBonusPayrolls = new HashSet<ListPeriodicBonusPayroll>(0);
    private Set<ListEmployeePhone> listEmployeePhones = new HashSet<ListEmployeePhone>(0);
    private Set<Loan> loans = new HashSet<Loan>(0);
    private Set<EmployeeSalary> employeeSalaries = new HashSet<EmployeeSalary>(0);
    private Set<ListLoanDetailPayroll> listLoanDetailPayrolls = new HashSet<ListLoanDetailPayroll>(0);
    private Set<PayrollDetail> payrollDetails = new HashSet<PayrollDetail>(0);
    private Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls = new HashSet<ListCelphoneDetailPayroll>(0);
    private Set<BonusPeriodic> bonusPeriodics = new HashSet<BonusPeriodic>(0);
    private Set<BonusEventual> bonusEventuals = new HashSet<BonusEventual>(0);
    private Set<Payroll> payrolls = new HashSet<Payroll>(0);
    private Set<TypeExtraHourSegment> typeExtraHourSegments = new HashSet<TypeExtraHourSegment>(0);
    private Set<ListCommissionEmployee> listCommissionEmployees = new HashSet<ListCommissionEmployee>(0);
    private Set<ListTravelExpenseDetail> listTravelExpenseDetails = new HashSet<ListTravelExpenseDetail>(0);
    private Set<PaymentLoanManual> paymentLoanManuals = new HashSet<PaymentLoanManual>(0);
    private Set<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees = new HashSet<ListPeriodicDeductionEmployee>(0);
    private Set<OverTimeSegmentPayroll> overTimeSegmentPayrolls = new HashSet<OverTimeSegmentPayroll>(0);
    private Set<TravelExpense> travelExpenses = new HashSet<TravelExpense>(0);
    private Set<DeductionEventual> deductionEventuals = new HashSet<DeductionEventual>(0);
    private Set<IsrDetail> isrDetails = new HashSet<IsrDetail>(0);
    private Set<ListOvertimePayroll> listOvertimePayrolls = new HashSet<ListOvertimePayroll>(0);
    private Set<ListPeriodicBonusEmployee> listPeriodicBonusEmployees = new HashSet<ListPeriodicBonusEmployee>(0);
    private Set<MobileNumber> mobileNumbers = new HashSet<MobileNumber>(0);
    private Set<DeductionPeriodic> deductionPeriodics = new HashSet<DeductionPeriodic>(0);

    public Currency() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_currency`", nullable=false, precision=10)
    public Integer getIdCurrency() {
        return this.idCurrency;
    }
    
    public void setIdCurrency(Integer idCurrency) {
        this.idCurrency = idCurrency;
    }

    

    @Column(name="`enable`", nullable=false)
    public Boolean getEnable() {
        return this.enable;
    }
    
    public void setEnable(Boolean enable) {
        this.enable = enable;
    }

    

    @Column(name="`nombre`", nullable=false, length=50)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    

    @Column(name="`name`", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="`iso`", length=3)
    public String getIso() {
        return this.iso;
    }
    
    public void setIso(String iso) {
        this.iso = iso;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListCommissionPayroll> getListCommissionPayrolls() {
        return this.listCommissionPayrolls;
    }
    
    public void setListCommissionPayrolls(Set<ListCommissionPayroll> listCommissionPayrolls) {
        this.listCommissionPayrolls = listCommissionPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListPeriodicDeductionPayroll> getListPeriodicDeductionPayrolls() {
        return this.listPeriodicDeductionPayrolls;
    }
    
    public void setListPeriodicDeductionPayrolls(Set<ListPeriodicDeductionPayroll> listPeriodicDeductionPayrolls) {
        this.listPeriodicDeductionPayrolls = listPeriodicDeductionPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListPeriodicBonusPayroll> getListPeriodicBonusPayrolls() {
        return this.listPeriodicBonusPayrolls;
    }
    
    public void setListPeriodicBonusPayrolls(Set<ListPeriodicBonusPayroll> listPeriodicBonusPayrolls) {
        this.listPeriodicBonusPayrolls = listPeriodicBonusPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListEmployeePhone> getListEmployeePhones() {
        return this.listEmployeePhones;
    }
    
    public void setListEmployeePhones(Set<ListEmployeePhone> listEmployeePhones) {
        this.listEmployeePhones = listEmployeePhones;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<Loan> getLoans() {
        return this.loans;
    }
    
    public void setLoans(Set<Loan> loans) {
        this.loans = loans;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<EmployeeSalary> getEmployeeSalaries() {
        return this.employeeSalaries;
    }
    
    public void setEmployeeSalaries(Set<EmployeeSalary> employeeSalaries) {
        this.employeeSalaries = employeeSalaries;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListLoanDetailPayroll> getListLoanDetailPayrolls() {
        return this.listLoanDetailPayrolls;
    }
    
    public void setListLoanDetailPayrolls(Set<ListLoanDetailPayroll> listLoanDetailPayrolls) {
        this.listLoanDetailPayrolls = listLoanDetailPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<PayrollDetail> getPayrollDetails() {
        return this.payrollDetails;
    }
    
    public void setPayrollDetails(Set<PayrollDetail> payrollDetails) {
        this.payrollDetails = payrollDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListCelphoneDetailPayroll> getListCelphoneDetailPayrolls() {
        return this.listCelphoneDetailPayrolls;
    }
    
    public void setListCelphoneDetailPayrolls(Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls) {
        this.listCelphoneDetailPayrolls = listCelphoneDetailPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<BonusPeriodic> getBonusPeriodics() {
        return this.bonusPeriodics;
    }
    
    public void setBonusPeriodics(Set<BonusPeriodic> bonusPeriodics) {
        this.bonusPeriodics = bonusPeriodics;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<BonusEventual> getBonusEventuals() {
        return this.bonusEventuals;
    }
    
    public void setBonusEventuals(Set<BonusEventual> bonusEventuals) {
        this.bonusEventuals = bonusEventuals;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<Payroll> getPayrolls() {
        return this.payrolls;
    }
    
    public void setPayrolls(Set<Payroll> payrolls) {
        this.payrolls = payrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<TypeExtraHourSegment> getTypeExtraHourSegments() {
        return this.typeExtraHourSegments;
    }
    
    public void setTypeExtraHourSegments(Set<TypeExtraHourSegment> typeExtraHourSegments) {
        this.typeExtraHourSegments = typeExtraHourSegments;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListCommissionEmployee> getListCommissionEmployees() {
        return this.listCommissionEmployees;
    }
    
    public void setListCommissionEmployees(Set<ListCommissionEmployee> listCommissionEmployees) {
        this.listCommissionEmployees = listCommissionEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListTravelExpenseDetail> getListTravelExpenseDetails() {
        return this.listTravelExpenseDetails;
    }
    
    public void setListTravelExpenseDetails(Set<ListTravelExpenseDetail> listTravelExpenseDetails) {
        this.listTravelExpenseDetails = listTravelExpenseDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<PaymentLoanManual> getPaymentLoanManuals() {
        return this.paymentLoanManuals;
    }
    
    public void setPaymentLoanManuals(Set<PaymentLoanManual> paymentLoanManuals) {
        this.paymentLoanManuals = paymentLoanManuals;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListPeriodicDeductionEmployee> getListPeriodicDeductionEmployees() {
        return this.listPeriodicDeductionEmployees;
    }
    
    public void setListPeriodicDeductionEmployees(Set<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees) {
        this.listPeriodicDeductionEmployees = listPeriodicDeductionEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<OverTimeSegmentPayroll> getOverTimeSegmentPayrolls() {
        return this.overTimeSegmentPayrolls;
    }
    
    public void setOverTimeSegmentPayrolls(Set<OverTimeSegmentPayroll> overTimeSegmentPayrolls) {
        this.overTimeSegmentPayrolls = overTimeSegmentPayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<TravelExpense> getTravelExpenses() {
        return this.travelExpenses;
    }
    
    public void setTravelExpenses(Set<TravelExpense> travelExpenses) {
        this.travelExpenses = travelExpenses;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<DeductionEventual> getDeductionEventuals() {
        return this.deductionEventuals;
    }
    
    public void setDeductionEventuals(Set<DeductionEventual> deductionEventuals) {
        this.deductionEventuals = deductionEventuals;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<IsrDetail> getIsrDetails() {
        return this.isrDetails;
    }
    
    public void setIsrDetails(Set<IsrDetail> isrDetails) {
        this.isrDetails = isrDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListOvertimePayroll> getListOvertimePayrolls() {
        return this.listOvertimePayrolls;
    }
    
    public void setListOvertimePayrolls(Set<ListOvertimePayroll> listOvertimePayrolls) {
        this.listOvertimePayrolls = listOvertimePayrolls;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<ListPeriodicBonusEmployee> getListPeriodicBonusEmployees() {
        return this.listPeriodicBonusEmployees;
    }
    
    public void setListPeriodicBonusEmployees(Set<ListPeriodicBonusEmployee> listPeriodicBonusEmployees) {
        this.listPeriodicBonusEmployees = listPeriodicBonusEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<MobileNumber> getMobileNumbers() {
        return this.mobileNumbers;
    }
    
    public void setMobileNumbers(Set<MobileNumber> mobileNumbers) {
        this.mobileNumbers = mobileNumbers;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="currency")
    public Set<DeductionPeriodic> getDeductionPeriodics() {
        return this.deductionPeriodics;
    }
    
    public void setDeductionPeriodics(Set<DeductionPeriodic> deductionPeriodics) {
        this.deductionPeriodics = deductionPeriodics;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Currency) )
		    return false;

		 Currency that = (Currency) o;

		 return ( (this.getIdCurrency()==that.getIdCurrency()) || ( this.getIdCurrency()!=null && that.getIdCurrency()!=null && this.getIdCurrency().equals(that.getIdCurrency()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdCurrency() == null ? 0 : this.getIdCurrency().hashCode() );

         return result;
    }


}

