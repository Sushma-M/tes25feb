/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Country generated by hbm2java
 */
@Entity
@Table(name="`country`"
)

public class Country  implements java.io.Serializable {

    private Integer idCountry;
    private Short codIso1;
    private String codIso2;
    private String codIso3;
    private String name;
    private String nationality;
    private Integer modUser;
    private Date modDate;
    private Set<Employee> employees = new HashSet<Employee>(0);
    private Set<ApplicantToPosition> applicantToPositions = new HashSet<ApplicantToPosition>(0);
    private Set<User> users = new HashSet<User>(0);
    private Set<EmployeeGeneralDetail> employeeGeneralDetails = new HashSet<EmployeeGeneralDetail>(0);
    private Set<Location> locations = new HashSet<Location>(0);

    public Country() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_country`", nullable=false, precision=10)
    public Integer getIdCountry() {
        return this.idCountry;
    }
    
    public void setIdCountry(Integer idCountry) {
        this.idCountry = idCountry;
    }

    

    @Column(name="`cod_iso1`", nullable=false, precision=5)
    public Short getCodIso1() {
        return this.codIso1;
    }
    
    public void setCodIso1(Short codIso1) {
        this.codIso1 = codIso1;
    }

    

    @Column(name="`cod_iso2`", nullable=false, length=2)
    public String getCodIso2() {
        return this.codIso2;
    }
    
    public void setCodIso2(String codIso2) {
        this.codIso2 = codIso2;
    }

    

    @Column(name="`cod_iso3`", nullable=false, length=3)
    public String getCodIso3() {
        return this.codIso3;
    }
    
    public void setCodIso3(String codIso3) {
        this.codIso3 = codIso3;
    }

    

    @Column(name="`name`", nullable=false, length=80)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="`nationality`", nullable=false)
    public String getNationality() {
        return this.nationality;
    }
    
    public void setNationality(String nationality) {
        this.nationality = nationality;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="country")
    public Set<Employee> getEmployees() {
        return this.employees;
    }
    
    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="country")
    public Set<ApplicantToPosition> getApplicantToPositions() {
        return this.applicantToPositions;
    }
    
    public void setApplicantToPositions(Set<ApplicantToPosition> applicantToPositions) {
        this.applicantToPositions = applicantToPositions;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="country")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="country")
    public Set<EmployeeGeneralDetail> getEmployeeGeneralDetails() {
        return this.employeeGeneralDetails;
    }
    
    public void setEmployeeGeneralDetails(Set<EmployeeGeneralDetail> employeeGeneralDetails) {
        this.employeeGeneralDetails = employeeGeneralDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="country")
    public Set<Location> getLocations() {
        return this.locations;
    }
    
    public void setLocations(Set<Location> locations) {
        this.locations = locations;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Country) )
		    return false;

		 Country that = (Country) o;

		 return ( (this.getIdCountry()==that.getIdCountry()) || ( this.getIdCountry()!=null && that.getIdCountry()!=null && this.getIdCountry().equals(that.getIdCountry()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdCountry() == null ? 0 : this.getIdCountry().hashCode() );

         return result;
    }


}

