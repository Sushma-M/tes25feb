/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * BadgeTemplate generated by hbm2java
 */
@Entity
@Table(name="`badge_template`"
)

public class BadgeTemplate  implements java.io.Serializable {

    private Integer idBadgeTemplate;
    private String templateName;
    private byte[] information;
    private byte[] backgroundDataFront;
    private byte[] backgroundDataBehind;
    private byte[] dataThumbnailView;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;

    public BadgeTemplate() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_badge_template`", nullable=false, precision=10)
    public Integer getIdBadgeTemplate() {
        return this.idBadgeTemplate;
    }
    
    public void setIdBadgeTemplate(Integer idBadgeTemplate) {
        this.idBadgeTemplate = idBadgeTemplate;
    }

    

    @Column(name="`template_name`", nullable=false, length=32)
    public String getTemplateName() {
        return this.templateName;
    }
    
    public void setTemplateName(String templateName) {
        this.templateName = templateName;
    }

    

    @Column(name="`information`", nullable=false)
    public byte[] getInformation() {
        return this.information;
    }
    
    public void setInformation(byte[] information) {
        this.information = information;
    }

    

    @Column(name="`background_data_front`", nullable=false)
    public byte[] getBackgroundDataFront() {
        return this.backgroundDataFront;
    }
    
    public void setBackgroundDataFront(byte[] backgroundDataFront) {
        this.backgroundDataFront = backgroundDataFront;
    }

    

    @Column(name="`background_data_behind`", nullable=false)
    public byte[] getBackgroundDataBehind() {
        return this.backgroundDataBehind;
    }
    
    public void setBackgroundDataBehind(byte[] backgroundDataBehind) {
        this.backgroundDataBehind = backgroundDataBehind;
    }

    

    @Column(name="`data_thumbnail_view`", nullable=false)
    public byte[] getDataThumbnailView() {
        return this.dataThumbnailView;
    }
    
    public void setDataThumbnailView(byte[] dataThumbnailView) {
        this.dataThumbnailView = dataThumbnailView;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`mod_date`", nullable=false, length=8)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof BadgeTemplate) )
		    return false;

		 BadgeTemplate that = (BadgeTemplate) o;

		 return ( (this.getIdBadgeTemplate()==that.getIdBadgeTemplate()) || ( this.getIdBadgeTemplate()!=null && that.getIdBadgeTemplate()!=null && this.getIdBadgeTemplate().equals(that.getIdBadgeTemplate()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdBadgeTemplate() == null ? 0 : this.getIdBadgeTemplate().hashCode() );

         return result;
    }


}

