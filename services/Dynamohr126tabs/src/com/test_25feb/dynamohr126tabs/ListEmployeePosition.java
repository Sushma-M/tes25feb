/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ListEmployeePosition generated by hbm2java
 */
@Entity
@Table(name="`list_employee_position`"
)

public class ListEmployeePosition  implements java.io.Serializable {

    private Integer idListEmployeePosition;


@Type(type="DateTime")
    private LocalDateTime startPossessionDate;


@Type(type="DateTime")
    private LocalDateTime endPossessionDate;
    private Boolean currentPosition;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Employee employee;
    private WorkPosition workPosition;

    public ListEmployeePosition() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_list_employee_position`", nullable=false, precision=10)
    public Integer getIdListEmployeePosition() {
        return this.idListEmployeePosition;
    }
    
    public void setIdListEmployeePosition(Integer idListEmployeePosition) {
        this.idListEmployeePosition = idListEmployeePosition;
    }

    

    @Column(name="`start_possession_date`", nullable=false, length=10)
    public LocalDateTime getStartPossessionDate() {
        return this.startPossessionDate;
    }
    
    public void setStartPossessionDate(LocalDateTime startPossessionDate) {
        this.startPossessionDate = startPossessionDate;
    }

    

    @Column(name="`end_possession_date`", length=10)
    public LocalDateTime getEndPossessionDate() {
        return this.endPossessionDate;
    }
    
    public void setEndPossessionDate(LocalDateTime endPossessionDate) {
        this.endPossessionDate = endPossessionDate;
    }

    

    @Column(name="`current_position`", nullable=false)
    public Boolean getCurrentPosition() {
        return this.currentPosition;
    }
    
    public void setCurrentPosition(Boolean currentPosition) {
        this.currentPosition = currentPosition;
    }

    

    @Column(name="`observation`", length=150)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_employee`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_work_position`", nullable=false)
    public WorkPosition getWorkPosition() {
        return this.workPosition;
    }
    
    public void setWorkPosition(WorkPosition workPosition) {
        this.workPosition = workPosition;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ListEmployeePosition) )
		    return false;

		 ListEmployeePosition that = (ListEmployeePosition) o;

		 return ( (this.getIdListEmployeePosition()==that.getIdListEmployeePosition()) || ( this.getIdListEmployeePosition()!=null && that.getIdListEmployeePosition()!=null && this.getIdListEmployeePosition().equals(that.getIdListEmployeePosition()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdListEmployeePosition() == null ? 0 : this.getIdListEmployeePosition().hashCode() );

         return result;
    }


}

