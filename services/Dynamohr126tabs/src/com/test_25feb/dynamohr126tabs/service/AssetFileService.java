/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class AssetFile.
 * @see com.test_25feb.dynamohr126tabs.AssetFile
 */

public interface AssetFileService {
   /**
	 * Creates a new assetfile.
	 * 
	 * @param created
	 *            The information of the created assetfile.
	 * @return The created assetfile.
	 */
	public AssetFile create(AssetFile created);

	/**
	 * Deletes a assetfile.
	 * 
	 * @param assetfileId
	 *            The id of the deleted assetfile.
	 * @return The deleted assetfile.
	 * @throws EntityNotFoundException
	 *             if no assetfile is found with the given id.
	 */
	public AssetFile delete(Integer assetfileId) throws EntityNotFoundException;

	/**
	 * Finds all assetfiles.
	 * 
	 * @return A list of assetfiles.
	 */
	public Page<AssetFile> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AssetFile> findAll(Pageable pageable);
	
	/**
	 * Finds assetfile by id.
	 * 
	 * @param id
	 *            The id of the wanted assetfile.
	 * @return The found assetfile. If no assetfile is found, this method returns
	 *         null.
	 */
	public AssetFile findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a assetfile.
	 * 
	 * @param updated
	 *            The information of the updated assetfile.
	 * @return The updated assetfile.
	 * @throws EntityNotFoundException
	 *             if no assetfile is found with given id.
	 */
	public AssetFile update(AssetFile updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assetfiles in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the assetfile.
	 */

	public long countAll();


    public Page<AssetFile> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

