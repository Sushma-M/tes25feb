/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class TimeSheet.
 * @see com.test_25feb.dynamohr126tabs.TimeSheet
 */

public interface TimeSheetService {
   /**
	 * Creates a new timesheet.
	 * 
	 * @param created
	 *            The information of the created timesheet.
	 * @return The created timesheet.
	 */
	public TimeSheet create(TimeSheet created);

	/**
	 * Deletes a timesheet.
	 * 
	 * @param timesheetId
	 *            The id of the deleted timesheet.
	 * @return The deleted timesheet.
	 * @throws EntityNotFoundException
	 *             if no timesheet is found with the given id.
	 */
	public TimeSheet delete(Integer timesheetId) throws EntityNotFoundException;

	/**
	 * Finds all timesheets.
	 * 
	 * @return A list of timesheets.
	 */
	public Page<TimeSheet> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TimeSheet> findAll(Pageable pageable);
	
	/**
	 * Finds timesheet by id.
	 * 
	 * @param id
	 *            The id of the wanted timesheet.
	 * @return The found timesheet. If no timesheet is found, this method returns
	 *         null.
	 */
	public TimeSheet findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a timesheet.
	 * 
	 * @param updated
	 *            The information of the updated timesheet.
	 * @return The updated timesheet.
	 * @throws EntityNotFoundException
	 *             if no timesheet is found with given id.
	 */
	public TimeSheet update(TimeSheet updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the timesheets in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the timesheet.
	 */

	public long countAll();


    public Page<TimeSheet> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

