/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class TypeEmployeeTermination.
 * @see com.test_25feb.dynamohr126tabs.TypeEmployeeTermination
 */

public interface TypeEmployeeTerminationService {
   /**
	 * Creates a new typeemployeetermination.
	 * 
	 * @param created
	 *            The information of the created typeemployeetermination.
	 * @return The created typeemployeetermination.
	 */
	public TypeEmployeeTermination create(TypeEmployeeTermination created);

	/**
	 * Deletes a typeemployeetermination.
	 * 
	 * @param typeemployeeterminationId
	 *            The id of the deleted typeemployeetermination.
	 * @return The deleted typeemployeetermination.
	 * @throws EntityNotFoundException
	 *             if no typeemployeetermination is found with the given id.
	 */
	public TypeEmployeeTermination delete(Integer typeemployeeterminationId) throws EntityNotFoundException;

	/**
	 * Finds all typeemployeeterminations.
	 * 
	 * @return A list of typeemployeeterminations.
	 */
	public Page<TypeEmployeeTermination> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TypeEmployeeTermination> findAll(Pageable pageable);
	
	/**
	 * Finds typeemployeetermination by id.
	 * 
	 * @param id
	 *            The id of the wanted typeemployeetermination.
	 * @return The found typeemployeetermination. If no typeemployeetermination is found, this method returns
	 *         null.
	 */
	public TypeEmployeeTermination findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a typeemployeetermination.
	 * 
	 * @param updated
	 *            The information of the updated typeemployeetermination.
	 * @return The updated typeemployeetermination.
	 * @throws EntityNotFoundException
	 *             if no typeemployeetermination is found with given id.
	 */
	public TypeEmployeeTermination update(TypeEmployeeTermination updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the typeemployeeterminations in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the typeemployeetermination.
	 */

	public long countAll();


    public Page<TypeEmployeeTermination> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

