/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class WorkPositionPerformanceIndicator.
 * @see com.test_25feb.dynamohr126tabs.WorkPositionPerformanceIndicator
 */

public interface WorkPositionPerformanceIndicatorService {
   /**
	 * Creates a new workpositionperformanceindicator.
	 * 
	 * @param created
	 *            The information of the created workpositionperformanceindicator.
	 * @return The created workpositionperformanceindicator.
	 */
	public WorkPositionPerformanceIndicator create(WorkPositionPerformanceIndicator created);

	/**
	 * Deletes a workpositionperformanceindicator.
	 * 
	 * @param workpositionperformanceindicatorId
	 *            The id of the deleted workpositionperformanceindicator.
	 * @return The deleted workpositionperformanceindicator.
	 * @throws EntityNotFoundException
	 *             if no workpositionperformanceindicator is found with the given id.
	 */
	public WorkPositionPerformanceIndicator delete(Integer workpositionperformanceindicatorId) throws EntityNotFoundException;

	/**
	 * Finds all workpositionperformanceindicators.
	 * 
	 * @return A list of workpositionperformanceindicators.
	 */
	public Page<WorkPositionPerformanceIndicator> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<WorkPositionPerformanceIndicator> findAll(Pageable pageable);
	
	/**
	 * Finds workpositionperformanceindicator by id.
	 * 
	 * @param id
	 *            The id of the wanted workpositionperformanceindicator.
	 * @return The found workpositionperformanceindicator. If no workpositionperformanceindicator is found, this method returns
	 *         null.
	 */
	public WorkPositionPerformanceIndicator findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a workpositionperformanceindicator.
	 * 
	 * @param updated
	 *            The information of the updated workpositionperformanceindicator.
	 * @return The updated workpositionperformanceindicator.
	 * @throws EntityNotFoundException
	 *             if no workpositionperformanceindicator is found with given id.
	 */
	public WorkPositionPerformanceIndicator update(WorkPositionPerformanceIndicator updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the workpositionperformanceindicators in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the workpositionperformanceindicator.
	 */

	public long countAll();


    public Page<WorkPositionPerformanceIndicator> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

