/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class AssetDischargeDocument.
 * @see com.test_25feb.dynamohr126tabs.AssetDischargeDocument
 */

public interface AssetDischargeDocumentService {
   /**
	 * Creates a new assetdischargedocument.
	 * 
	 * @param created
	 *            The information of the created assetdischargedocument.
	 * @return The created assetdischargedocument.
	 */
	public AssetDischargeDocument create(AssetDischargeDocument created);

	/**
	 * Deletes a assetdischargedocument.
	 * 
	 * @param assetdischargedocumentId
	 *            The id of the deleted assetdischargedocument.
	 * @return The deleted assetdischargedocument.
	 * @throws EntityNotFoundException
	 *             if no assetdischargedocument is found with the given id.
	 */
	public AssetDischargeDocument delete(Integer assetdischargedocumentId) throws EntityNotFoundException;

	/**
	 * Finds all assetdischargedocuments.
	 * 
	 * @return A list of assetdischargedocuments.
	 */
	public Page<AssetDischargeDocument> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AssetDischargeDocument> findAll(Pageable pageable);
	
	/**
	 * Finds assetdischargedocument by id.
	 * 
	 * @param id
	 *            The id of the wanted assetdischargedocument.
	 * @return The found assetdischargedocument. If no assetdischargedocument is found, this method returns
	 *         null.
	 */
	public AssetDischargeDocument findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a assetdischargedocument.
	 * 
	 * @param updated
	 *            The information of the updated assetdischargedocument.
	 * @return The updated assetdischargedocument.
	 * @throws EntityNotFoundException
	 *             if no assetdischargedocument is found with given id.
	 */
	public AssetDischargeDocument update(AssetDischargeDocument updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assetdischargedocuments in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the assetdischargedocument.
	 */

	public long countAll();


    public Page<AssetDischargeDocument> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

