/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class Month.
 * @see com.test_25feb.dynamohr126tabs.Month
 */

public interface MonthService {
   /**
	 * Creates a new month.
	 * 
	 * @param created
	 *            The information of the created month.
	 * @return The created month.
	 */
	public Month create(Month created);

	/**
	 * Deletes a month.
	 * 
	 * @param monthId
	 *            The id of the deleted month.
	 * @return The deleted month.
	 * @throws EntityNotFoundException
	 *             if no month is found with the given id.
	 */
	public Month delete(Integer monthId) throws EntityNotFoundException;

	/**
	 * Finds all months.
	 * 
	 * @return A list of months.
	 */
	public Page<Month> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Month> findAll(Pageable pageable);
	
	/**
	 * Finds month by id.
	 * 
	 * @param id
	 *            The id of the wanted month.
	 * @return The found month. If no month is found, this method returns
	 *         null.
	 */
	public Month findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a month.
	 * 
	 * @param updated
	 *            The information of the updated month.
	 * @return The updated month.
	 * @throws EntityNotFoundException
	 *             if no month is found with given id.
	 */
	public Month update(Month updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the months in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the month.
	 */

	public long countAll();


    public Page<Month> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

