/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class AssessmentEmployeeData.
 * @see com.test_25feb.dynamohr126tabs.AssessmentEmployeeData
 */

public interface AssessmentEmployeeDataService {
   /**
	 * Creates a new assessmentemployeedata.
	 * 
	 * @param created
	 *            The information of the created assessmentemployeedata.
	 * @return The created assessmentemployeedata.
	 */
	public AssessmentEmployeeData create(AssessmentEmployeeData created);

	/**
	 * Deletes a assessmentemployeedata.
	 * 
	 * @param assessmentemployeedataId
	 *            The id of the deleted assessmentemployeedata.
	 * @return The deleted assessmentemployeedata.
	 * @throws EntityNotFoundException
	 *             if no assessmentemployeedata is found with the given id.
	 */
	public AssessmentEmployeeData delete(Integer assessmentemployeedataId) throws EntityNotFoundException;

	/**
	 * Finds all assessmentemployeedatas.
	 * 
	 * @return A list of assessmentemployeedatas.
	 */
	public Page<AssessmentEmployeeData> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AssessmentEmployeeData> findAll(Pageable pageable);
	
	/**
	 * Finds assessmentemployeedata by id.
	 * 
	 * @param id
	 *            The id of the wanted assessmentemployeedata.
	 * @return The found assessmentemployeedata. If no assessmentemployeedata is found, this method returns
	 *         null.
	 */
	public AssessmentEmployeeData findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a assessmentemployeedata.
	 * 
	 * @param updated
	 *            The information of the updated assessmentemployeedata.
	 * @return The updated assessmentemployeedata.
	 * @throws EntityNotFoundException
	 *             if no assessmentemployeedata is found with given id.
	 */
	public AssessmentEmployeeData update(AssessmentEmployeeData updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assessmentemployeedatas in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the assessmentemployeedata.
	 */

	public long countAll();


    public Page<AssessmentEmployeeData> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

