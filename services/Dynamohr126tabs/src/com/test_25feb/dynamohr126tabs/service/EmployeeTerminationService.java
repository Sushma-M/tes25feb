/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class EmployeeTermination.
 * @see com.test_25feb.dynamohr126tabs.EmployeeTermination
 */

public interface EmployeeTerminationService {
   /**
	 * Creates a new employeetermination.
	 * 
	 * @param created
	 *            The information of the created employeetermination.
	 * @return The created employeetermination.
	 */
	public EmployeeTermination create(EmployeeTermination created);

	/**
	 * Deletes a employeetermination.
	 * 
	 * @param employeeterminationId
	 *            The id of the deleted employeetermination.
	 * @return The deleted employeetermination.
	 * @throws EntityNotFoundException
	 *             if no employeetermination is found with the given id.
	 */
	public EmployeeTermination delete(Integer employeeterminationId) throws EntityNotFoundException;

	/**
	 * Finds all employeeterminations.
	 * 
	 * @return A list of employeeterminations.
	 */
	public Page<EmployeeTermination> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<EmployeeTermination> findAll(Pageable pageable);
	
	/**
	 * Finds employeetermination by id.
	 * 
	 * @param id
	 *            The id of the wanted employeetermination.
	 * @return The found employeetermination. If no employeetermination is found, this method returns
	 *         null.
	 */
	public EmployeeTermination findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a employeetermination.
	 * 
	 * @param updated
	 *            The information of the updated employeetermination.
	 * @return The updated employeetermination.
	 * @throws EntityNotFoundException
	 *             if no employeetermination is found with given id.
	 */
	public EmployeeTermination update(EmployeeTermination updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the employeeterminations in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the employeetermination.
	 */

	public long countAll();


    public Page<EmployeeTermination> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

