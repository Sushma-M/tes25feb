/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class Asset.
 * @see com.test_25feb.dynamohr126tabs.Asset
 */

public interface AssetService {
   /**
	 * Creates a new asset.
	 * 
	 * @param created
	 *            The information of the created asset.
	 * @return The created asset.
	 */
	public Asset create(Asset created);

	/**
	 * Deletes a asset.
	 * 
	 * @param assetId
	 *            The id of the deleted asset.
	 * @return The deleted asset.
	 * @throws EntityNotFoundException
	 *             if no asset is found with the given id.
	 */
	public Asset delete(Integer assetId) throws EntityNotFoundException;

	/**
	 * Finds all assets.
	 * 
	 * @return A list of assets.
	 */
	public Page<Asset> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Asset> findAll(Pageable pageable);
	
	/**
	 * Finds asset by id.
	 * 
	 * @param id
	 *            The id of the wanted asset.
	 * @return The found asset. If no asset is found, this method returns
	 *         null.
	 */
	public Asset findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a asset.
	 * 
	 * @param updated
	 *            The information of the updated asset.
	 * @return The updated asset.
	 * @throws EntityNotFoundException
	 *             if no asset is found with given id.
	 */
	public Asset update(Asset updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assets in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the asset.
	 */

	public long countAll();


    public Page<Asset> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

