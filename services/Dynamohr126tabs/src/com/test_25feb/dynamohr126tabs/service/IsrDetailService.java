/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class IsrDetail.
 * @see com.test_25feb.dynamohr126tabs.IsrDetail
 */

public interface IsrDetailService {
   /**
	 * Creates a new isrdetail.
	 * 
	 * @param created
	 *            The information of the created isrdetail.
	 * @return The created isrdetail.
	 */
	public IsrDetail create(IsrDetail created);

	/**
	 * Deletes a isrdetail.
	 * 
	 * @param isrdetailId
	 *            The id of the deleted isrdetail.
	 * @return The deleted isrdetail.
	 * @throws EntityNotFoundException
	 *             if no isrdetail is found with the given id.
	 */
	public IsrDetail delete(Integer isrdetailId) throws EntityNotFoundException;

	/**
	 * Finds all isrdetails.
	 * 
	 * @return A list of isrdetails.
	 */
	public Page<IsrDetail> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<IsrDetail> findAll(Pageable pageable);
	
	/**
	 * Finds isrdetail by id.
	 * 
	 * @param id
	 *            The id of the wanted isrdetail.
	 * @return The found isrdetail. If no isrdetail is found, this method returns
	 *         null.
	 */
	public IsrDetail findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a isrdetail.
	 * 
	 * @param updated
	 *            The information of the updated isrdetail.
	 * @return The updated isrdetail.
	 * @throws EntityNotFoundException
	 *             if no isrdetail is found with given id.
	 */
	public IsrDetail update(IsrDetail updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the isrdetails in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the isrdetail.
	 */

	public long countAll();


    public Page<IsrDetail> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

