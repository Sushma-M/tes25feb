/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class JustifiedTravelExpenseFile.
 * @see com.test_25feb.dynamohr126tabs.JustifiedTravelExpenseFile
 */

public interface JustifiedTravelExpenseFileService {
   /**
	 * Creates a new justifiedtravelexpensefile.
	 * 
	 * @param created
	 *            The information of the created justifiedtravelexpensefile.
	 * @return The created justifiedtravelexpensefile.
	 */
	public JustifiedTravelExpenseFile create(JustifiedTravelExpenseFile created);

	/**
	 * Deletes a justifiedtravelexpensefile.
	 * 
	 * @param justifiedtravelexpensefileId
	 *            The id of the deleted justifiedtravelexpensefile.
	 * @return The deleted justifiedtravelexpensefile.
	 * @throws EntityNotFoundException
	 *             if no justifiedtravelexpensefile is found with the given id.
	 */
	public JustifiedTravelExpenseFile delete(Integer justifiedtravelexpensefileId) throws EntityNotFoundException;

	/**
	 * Finds all justifiedtravelexpensefiles.
	 * 
	 * @return A list of justifiedtravelexpensefiles.
	 */
	public Page<JustifiedTravelExpenseFile> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<JustifiedTravelExpenseFile> findAll(Pageable pageable);
	
	/**
	 * Finds justifiedtravelexpensefile by id.
	 * 
	 * @param id
	 *            The id of the wanted justifiedtravelexpensefile.
	 * @return The found justifiedtravelexpensefile. If no justifiedtravelexpensefile is found, this method returns
	 *         null.
	 */
	public JustifiedTravelExpenseFile findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a justifiedtravelexpensefile.
	 * 
	 * @param updated
	 *            The information of the updated justifiedtravelexpensefile.
	 * @return The updated justifiedtravelexpensefile.
	 * @throws EntityNotFoundException
	 *             if no justifiedtravelexpensefile is found with given id.
	 */
	public JustifiedTravelExpenseFile update(JustifiedTravelExpenseFile updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the justifiedtravelexpensefiles in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the justifiedtravelexpensefile.
	 */

	public long countAll();


    public Page<JustifiedTravelExpenseFile> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

