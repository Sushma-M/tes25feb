/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class AssetAssignDocument.
 * @see com.test_25feb.dynamohr126tabs.AssetAssignDocument
 */

public interface AssetAssignDocumentService {
   /**
	 * Creates a new assetassigndocument.
	 * 
	 * @param created
	 *            The information of the created assetassigndocument.
	 * @return The created assetassigndocument.
	 */
	public AssetAssignDocument create(AssetAssignDocument created);

	/**
	 * Deletes a assetassigndocument.
	 * 
	 * @param assetassigndocumentId
	 *            The id of the deleted assetassigndocument.
	 * @return The deleted assetassigndocument.
	 * @throws EntityNotFoundException
	 *             if no assetassigndocument is found with the given id.
	 */
	public AssetAssignDocument delete(Integer assetassigndocumentId) throws EntityNotFoundException;

	/**
	 * Finds all assetassigndocuments.
	 * 
	 * @return A list of assetassigndocuments.
	 */
	public Page<AssetAssignDocument> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AssetAssignDocument> findAll(Pageable pageable);
	
	/**
	 * Finds assetassigndocument by id.
	 * 
	 * @param id
	 *            The id of the wanted assetassigndocument.
	 * @return The found assetassigndocument. If no assetassigndocument is found, this method returns
	 *         null.
	 */
	public AssetAssignDocument findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a assetassigndocument.
	 * 
	 * @param updated
	 *            The information of the updated assetassigndocument.
	 * @return The updated assetassigndocument.
	 * @throws EntityNotFoundException
	 *             if no assetassigndocument is found with given id.
	 */
	public AssetAssignDocument update(AssetAssignDocument updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assetassigndocuments in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the assetassigndocument.
	 */

	public long countAll();


    public Page<AssetAssignDocument> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

