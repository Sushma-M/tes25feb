/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class ListOvertimePayroll.
 * @see com.test_25feb.dynamohr126tabs.ListOvertimePayroll
 */

public interface ListOvertimePayrollService {
   /**
	 * Creates a new listovertimepayroll.
	 * 
	 * @param created
	 *            The information of the created listovertimepayroll.
	 * @return The created listovertimepayroll.
	 */
	public ListOvertimePayroll create(ListOvertimePayroll created);

	/**
	 * Deletes a listovertimepayroll.
	 * 
	 * @param listovertimepayrollId
	 *            The id of the deleted listovertimepayroll.
	 * @return The deleted listovertimepayroll.
	 * @throws EntityNotFoundException
	 *             if no listovertimepayroll is found with the given id.
	 */
	public ListOvertimePayroll delete(Integer listovertimepayrollId) throws EntityNotFoundException;

	/**
	 * Finds all listovertimepayrolls.
	 * 
	 * @return A list of listovertimepayrolls.
	 */
	public Page<ListOvertimePayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ListOvertimePayroll> findAll(Pageable pageable);
	
	/**
	 * Finds listovertimepayroll by id.
	 * 
	 * @param id
	 *            The id of the wanted listovertimepayroll.
	 * @return The found listovertimepayroll. If no listovertimepayroll is found, this method returns
	 *         null.
	 */
	public ListOvertimePayroll findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a listovertimepayroll.
	 * 
	 * @param updated
	 *            The information of the updated listovertimepayroll.
	 * @return The updated listovertimepayroll.
	 * @throws EntityNotFoundException
	 *             if no listovertimepayroll is found with given id.
	 */
	public ListOvertimePayroll update(ListOvertimePayroll updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the listovertimepayrolls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the listovertimepayroll.
	 */

	public long countAll();


    public Page<ListOvertimePayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

