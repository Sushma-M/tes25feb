/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class Country.
 * @see com.test_25feb.dynamohr126tabs.Country
 */

public interface CountryService {
   /**
	 * Creates a new country.
	 * 
	 * @param created
	 *            The information of the created country.
	 * @return The created country.
	 */
	public Country create(Country created);

	/**
	 * Deletes a country.
	 * 
	 * @param countryId
	 *            The id of the deleted country.
	 * @return The deleted country.
	 * @throws EntityNotFoundException
	 *             if no country is found with the given id.
	 */
	public Country delete(Integer countryId) throws EntityNotFoundException;

	/**
	 * Finds all countrys.
	 * 
	 * @return A list of countrys.
	 */
	public Page<Country> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Country> findAll(Pageable pageable);
	
	/**
	 * Finds country by id.
	 * 
	 * @param id
	 *            The id of the wanted country.
	 * @return The found country. If no country is found, this method returns
	 *         null.
	 */
	public Country findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a country.
	 * 
	 * @param updated
	 *            The information of the updated country.
	 * @return The updated country.
	 * @throws EntityNotFoundException
	 *             if no country is found with given id.
	 */
	public Country update(Country updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the countrys in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the country.
	 */

	public long countAll();


    public Page<Country> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

