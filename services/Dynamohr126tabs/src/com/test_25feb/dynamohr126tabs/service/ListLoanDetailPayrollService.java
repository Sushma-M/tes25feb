/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class ListLoanDetailPayroll.
 * @see com.test_25feb.dynamohr126tabs.ListLoanDetailPayroll
 */

public interface ListLoanDetailPayrollService {
   /**
	 * Creates a new listloandetailpayroll.
	 * 
	 * @param created
	 *            The information of the created listloandetailpayroll.
	 * @return The created listloandetailpayroll.
	 */
	public ListLoanDetailPayroll create(ListLoanDetailPayroll created);

	/**
	 * Deletes a listloandetailpayroll.
	 * 
	 * @param listloandetailpayrollId
	 *            The id of the deleted listloandetailpayroll.
	 * @return The deleted listloandetailpayroll.
	 * @throws EntityNotFoundException
	 *             if no listloandetailpayroll is found with the given id.
	 */
	public ListLoanDetailPayroll delete(Integer listloandetailpayrollId) throws EntityNotFoundException;

	/**
	 * Finds all listloandetailpayrolls.
	 * 
	 * @return A list of listloandetailpayrolls.
	 */
	public Page<ListLoanDetailPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ListLoanDetailPayroll> findAll(Pageable pageable);
	
	/**
	 * Finds listloandetailpayroll by id.
	 * 
	 * @param id
	 *            The id of the wanted listloandetailpayroll.
	 * @return The found listloandetailpayroll. If no listloandetailpayroll is found, this method returns
	 *         null.
	 */
	public ListLoanDetailPayroll findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a listloandetailpayroll.
	 * 
	 * @param updated
	 *            The information of the updated listloandetailpayroll.
	 * @return The updated listloandetailpayroll.
	 * @throws EntityNotFoundException
	 *             if no listloandetailpayroll is found with given id.
	 */
	public ListLoanDetailPayroll update(ListLoanDetailPayroll updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the listloandetailpayrolls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the listloandetailpayroll.
	 */

	public long countAll();


    public Page<ListLoanDetailPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

