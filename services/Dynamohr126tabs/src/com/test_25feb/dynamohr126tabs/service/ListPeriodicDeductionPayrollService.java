/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class ListPeriodicDeductionPayroll.
 * @see com.test_25feb.dynamohr126tabs.ListPeriodicDeductionPayroll
 */

public interface ListPeriodicDeductionPayrollService {
   /**
	 * Creates a new listperiodicdeductionpayroll.
	 * 
	 * @param created
	 *            The information of the created listperiodicdeductionpayroll.
	 * @return The created listperiodicdeductionpayroll.
	 */
	public ListPeriodicDeductionPayroll create(ListPeriodicDeductionPayroll created);

	/**
	 * Deletes a listperiodicdeductionpayroll.
	 * 
	 * @param listperiodicdeductionpayrollId
	 *            The id of the deleted listperiodicdeductionpayroll.
	 * @return The deleted listperiodicdeductionpayroll.
	 * @throws EntityNotFoundException
	 *             if no listperiodicdeductionpayroll is found with the given id.
	 */
	public ListPeriodicDeductionPayroll delete(Integer listperiodicdeductionpayrollId) throws EntityNotFoundException;

	/**
	 * Finds all listperiodicdeductionpayrolls.
	 * 
	 * @return A list of listperiodicdeductionpayrolls.
	 */
	public Page<ListPeriodicDeductionPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ListPeriodicDeductionPayroll> findAll(Pageable pageable);
	
	/**
	 * Finds listperiodicdeductionpayroll by id.
	 * 
	 * @param id
	 *            The id of the wanted listperiodicdeductionpayroll.
	 * @return The found listperiodicdeductionpayroll. If no listperiodicdeductionpayroll is found, this method returns
	 *         null.
	 */
	public ListPeriodicDeductionPayroll findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a listperiodicdeductionpayroll.
	 * 
	 * @param updated
	 *            The information of the updated listperiodicdeductionpayroll.
	 * @return The updated listperiodicdeductionpayroll.
	 * @throws EntityNotFoundException
	 *             if no listperiodicdeductionpayroll is found with given id.
	 */
	public ListPeriodicDeductionPayroll update(ListPeriodicDeductionPayroll updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the listperiodicdeductionpayrolls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the listperiodicdeductionpayroll.
	 */

	public long countAll();


    public Page<ListPeriodicDeductionPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

