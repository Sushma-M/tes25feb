/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class BonusPeriodic.
 * @see com.test_25feb.dynamohr126tabs.BonusPeriodic
 */

public interface BonusPeriodicService {
   /**
	 * Creates a new bonusperiodic.
	 * 
	 * @param created
	 *            The information of the created bonusperiodic.
	 * @return The created bonusperiodic.
	 */
	public BonusPeriodic create(BonusPeriodic created);

	/**
	 * Deletes a bonusperiodic.
	 * 
	 * @param bonusperiodicId
	 *            The id of the deleted bonusperiodic.
	 * @return The deleted bonusperiodic.
	 * @throws EntityNotFoundException
	 *             if no bonusperiodic is found with the given id.
	 */
	public BonusPeriodic delete(Integer bonusperiodicId) throws EntityNotFoundException;

	/**
	 * Finds all bonusperiodics.
	 * 
	 * @return A list of bonusperiodics.
	 */
	public Page<BonusPeriodic> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<BonusPeriodic> findAll(Pageable pageable);
	
	/**
	 * Finds bonusperiodic by id.
	 * 
	 * @param id
	 *            The id of the wanted bonusperiodic.
	 * @return The found bonusperiodic. If no bonusperiodic is found, this method returns
	 *         null.
	 */
	public BonusPeriodic findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a bonusperiodic.
	 * 
	 * @param updated
	 *            The information of the updated bonusperiodic.
	 * @return The updated bonusperiodic.
	 * @throws EntityNotFoundException
	 *             if no bonusperiodic is found with given id.
	 */
	public BonusPeriodic update(BonusPeriodic updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the bonusperiodics in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the bonusperiodic.
	 */

	public long countAll();


    public Page<BonusPeriodic> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

