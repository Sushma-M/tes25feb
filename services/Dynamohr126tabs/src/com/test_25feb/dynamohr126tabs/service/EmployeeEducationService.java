/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class EmployeeEducation.
 * @see com.test_25feb.dynamohr126tabs.EmployeeEducation
 */

public interface EmployeeEducationService {
   /**
	 * Creates a new employeeeducation.
	 * 
	 * @param created
	 *            The information of the created employeeeducation.
	 * @return The created employeeeducation.
	 */
	public EmployeeEducation create(EmployeeEducation created);

	/**
	 * Deletes a employeeeducation.
	 * 
	 * @param employeeeducationId
	 *            The id of the deleted employeeeducation.
	 * @return The deleted employeeeducation.
	 * @throws EntityNotFoundException
	 *             if no employeeeducation is found with the given id.
	 */
	public EmployeeEducation delete(Integer employeeeducationId) throws EntityNotFoundException;

	/**
	 * Finds all employeeeducations.
	 * 
	 * @return A list of employeeeducations.
	 */
	public Page<EmployeeEducation> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<EmployeeEducation> findAll(Pageable pageable);
	
	/**
	 * Finds employeeeducation by id.
	 * 
	 * @param id
	 *            The id of the wanted employeeeducation.
	 * @return The found employeeeducation. If no employeeeducation is found, this method returns
	 *         null.
	 */
	public EmployeeEducation findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a employeeeducation.
	 * 
	 * @param updated
	 *            The information of the updated employeeeducation.
	 * @return The updated employeeeducation.
	 * @throws EntityNotFoundException
	 *             if no employeeeducation is found with given id.
	 */
	public EmployeeEducation update(EmployeeEducation updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the employeeeducations in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the employeeeducation.
	 */

	public long countAll();


    public Page<EmployeeEducation> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

