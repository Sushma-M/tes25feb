/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class ListCommissionEmployee.
 * @see com.test_25feb.dynamohr126tabs.ListCommissionEmployee
 */

public interface ListCommissionEmployeeService {
   /**
	 * Creates a new listcommissionemployee.
	 * 
	 * @param created
	 *            The information of the created listcommissionemployee.
	 * @return The created listcommissionemployee.
	 */
	public ListCommissionEmployee create(ListCommissionEmployee created);

	/**
	 * Deletes a listcommissionemployee.
	 * 
	 * @param listcommissionemployeeId
	 *            The id of the deleted listcommissionemployee.
	 * @return The deleted listcommissionemployee.
	 * @throws EntityNotFoundException
	 *             if no listcommissionemployee is found with the given id.
	 */
	public ListCommissionEmployee delete(Integer listcommissionemployeeId) throws EntityNotFoundException;

	/**
	 * Finds all listcommissionemployees.
	 * 
	 * @return A list of listcommissionemployees.
	 */
	public Page<ListCommissionEmployee> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ListCommissionEmployee> findAll(Pageable pageable);
	
	/**
	 * Finds listcommissionemployee by id.
	 * 
	 * @param id
	 *            The id of the wanted listcommissionemployee.
	 * @return The found listcommissionemployee. If no listcommissionemployee is found, this method returns
	 *         null.
	 */
	public ListCommissionEmployee findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a listcommissionemployee.
	 * 
	 * @param updated
	 *            The information of the updated listcommissionemployee.
	 * @return The updated listcommissionemployee.
	 * @throws EntityNotFoundException
	 *             if no listcommissionemployee is found with given id.
	 */
	public ListCommissionEmployee update(ListCommissionEmployee updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the listcommissionemployees in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the listcommissionemployee.
	 */

	public long countAll();


    public Page<ListCommissionEmployee> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

