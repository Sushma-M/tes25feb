/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class TypeOperationTimesheet.
 * @see com.test_25feb.dynamohr126tabs.TypeOperationTimesheet
 */

public interface TypeOperationTimesheetService {
   /**
	 * Creates a new typeoperationtimesheet.
	 * 
	 * @param created
	 *            The information of the created typeoperationtimesheet.
	 * @return The created typeoperationtimesheet.
	 */
	public TypeOperationTimesheet create(TypeOperationTimesheet created);

	/**
	 * Deletes a typeoperationtimesheet.
	 * 
	 * @param typeoperationtimesheetId
	 *            The id of the deleted typeoperationtimesheet.
	 * @return The deleted typeoperationtimesheet.
	 * @throws EntityNotFoundException
	 *             if no typeoperationtimesheet is found with the given id.
	 */
	public TypeOperationTimesheet delete(Integer typeoperationtimesheetId) throws EntityNotFoundException;

	/**
	 * Finds all typeoperationtimesheets.
	 * 
	 * @return A list of typeoperationtimesheets.
	 */
	public Page<TypeOperationTimesheet> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TypeOperationTimesheet> findAll(Pageable pageable);
	
	/**
	 * Finds typeoperationtimesheet by id.
	 * 
	 * @param id
	 *            The id of the wanted typeoperationtimesheet.
	 * @return The found typeoperationtimesheet. If no typeoperationtimesheet is found, this method returns
	 *         null.
	 */
	public TypeOperationTimesheet findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a typeoperationtimesheet.
	 * 
	 * @param updated
	 *            The information of the updated typeoperationtimesheet.
	 * @return The updated typeoperationtimesheet.
	 * @throws EntityNotFoundException
	 *             if no typeoperationtimesheet is found with given id.
	 */
	public TypeOperationTimesheet update(TypeOperationTimesheet updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the typeoperationtimesheets in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the typeoperationtimesheet.
	 */

	public long countAll();


    public Page<TypeOperationTimesheet> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

