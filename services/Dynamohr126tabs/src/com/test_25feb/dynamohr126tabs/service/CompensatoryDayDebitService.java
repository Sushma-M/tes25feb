/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class CompensatoryDayDebit.
 * @see com.test_25feb.dynamohr126tabs.CompensatoryDayDebit
 */

public interface CompensatoryDayDebitService {
   /**
	 * Creates a new compensatorydaydebit.
	 * 
	 * @param created
	 *            The information of the created compensatorydaydebit.
	 * @return The created compensatorydaydebit.
	 */
	public CompensatoryDayDebit create(CompensatoryDayDebit created);

	/**
	 * Deletes a compensatorydaydebit.
	 * 
	 * @param compensatorydaydebitId
	 *            The id of the deleted compensatorydaydebit.
	 * @return The deleted compensatorydaydebit.
	 * @throws EntityNotFoundException
	 *             if no compensatorydaydebit is found with the given id.
	 */
	public CompensatoryDayDebit delete(Integer compensatorydaydebitId) throws EntityNotFoundException;

	/**
	 * Finds all compensatorydaydebits.
	 * 
	 * @return A list of compensatorydaydebits.
	 */
	public Page<CompensatoryDayDebit> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<CompensatoryDayDebit> findAll(Pageable pageable);
	
	/**
	 * Finds compensatorydaydebit by id.
	 * 
	 * @param id
	 *            The id of the wanted compensatorydaydebit.
	 * @return The found compensatorydaydebit. If no compensatorydaydebit is found, this method returns
	 *         null.
	 */
	public CompensatoryDayDebit findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a compensatorydaydebit.
	 * 
	 * @param updated
	 *            The information of the updated compensatorydaydebit.
	 * @return The updated compensatorydaydebit.
	 * @throws EntityNotFoundException
	 *             if no compensatorydaydebit is found with given id.
	 */
	public CompensatoryDayDebit update(CompensatoryDayDebit updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the compensatorydaydebits in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the compensatorydaydebit.
	 */

	public long countAll();


    public Page<CompensatoryDayDebit> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

