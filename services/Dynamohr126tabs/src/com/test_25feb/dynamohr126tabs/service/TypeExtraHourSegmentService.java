/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class TypeExtraHourSegment.
 * @see com.test_25feb.dynamohr126tabs.TypeExtraHourSegment
 */

public interface TypeExtraHourSegmentService {
   /**
	 * Creates a new typeextrahoursegment.
	 * 
	 * @param created
	 *            The information of the created typeextrahoursegment.
	 * @return The created typeextrahoursegment.
	 */
	public TypeExtraHourSegment create(TypeExtraHourSegment created);

	/**
	 * Deletes a typeextrahoursegment.
	 * 
	 * @param typeextrahoursegmentId
	 *            The id of the deleted typeextrahoursegment.
	 * @return The deleted typeextrahoursegment.
	 * @throws EntityNotFoundException
	 *             if no typeextrahoursegment is found with the given id.
	 */
	public TypeExtraHourSegment delete(Integer typeextrahoursegmentId) throws EntityNotFoundException;

	/**
	 * Finds all typeextrahoursegments.
	 * 
	 * @return A list of typeextrahoursegments.
	 */
	public Page<TypeExtraHourSegment> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TypeExtraHourSegment> findAll(Pageable pageable);
	
	/**
	 * Finds typeextrahoursegment by id.
	 * 
	 * @param id
	 *            The id of the wanted typeextrahoursegment.
	 * @return The found typeextrahoursegment. If no typeextrahoursegment is found, this method returns
	 *         null.
	 */
	public TypeExtraHourSegment findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a typeextrahoursegment.
	 * 
	 * @param updated
	 *            The information of the updated typeextrahoursegment.
	 * @return The updated typeextrahoursegment.
	 * @throws EntityNotFoundException
	 *             if no typeextrahoursegment is found with given id.
	 */
	public TypeExtraHourSegment update(TypeExtraHourSegment updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the typeextrahoursegments in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the typeextrahoursegment.
	 */

	public long countAll();


    public Page<TypeExtraHourSegment> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

