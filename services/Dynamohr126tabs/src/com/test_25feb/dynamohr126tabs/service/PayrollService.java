/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class Payroll.
 * @see com.test_25feb.dynamohr126tabs.Payroll
 */

public interface PayrollService {
   /**
	 * Creates a new payroll.
	 * 
	 * @param created
	 *            The information of the created payroll.
	 * @return The created payroll.
	 */
	public Payroll create(Payroll created);

	/**
	 * Deletes a payroll.
	 * 
	 * @param payrollId
	 *            The id of the deleted payroll.
	 * @return The deleted payroll.
	 * @throws EntityNotFoundException
	 *             if no payroll is found with the given id.
	 */
	public Payroll delete(Integer payrollId) throws EntityNotFoundException;

	/**
	 * Finds all payrolls.
	 * 
	 * @return A list of payrolls.
	 */
	public Page<Payroll> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Payroll> findAll(Pageable pageable);
	
	/**
	 * Finds payroll by id.
	 * 
	 * @param id
	 *            The id of the wanted payroll.
	 * @return The found payroll. If no payroll is found, this method returns
	 *         null.
	 */
	public Payroll findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a payroll.
	 * 
	 * @param updated
	 *            The information of the updated payroll.
	 * @return The updated payroll.
	 * @throws EntityNotFoundException
	 *             if no payroll is found with given id.
	 */
	public Payroll update(Payroll updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the payrolls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the payroll.
	 */

	public long countAll();


    public Page<Payroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

