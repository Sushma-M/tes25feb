/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class AssetReintegrationDocument.
 * @see com.test_25feb.dynamohr126tabs.AssetReintegrationDocument
 */

public interface AssetReintegrationDocumentService {
   /**
	 * Creates a new assetreintegrationdocument.
	 * 
	 * @param created
	 *            The information of the created assetreintegrationdocument.
	 * @return The created assetreintegrationdocument.
	 */
	public AssetReintegrationDocument create(AssetReintegrationDocument created);

	/**
	 * Deletes a assetreintegrationdocument.
	 * 
	 * @param assetreintegrationdocumentId
	 *            The id of the deleted assetreintegrationdocument.
	 * @return The deleted assetreintegrationdocument.
	 * @throws EntityNotFoundException
	 *             if no assetreintegrationdocument is found with the given id.
	 */
	public AssetReintegrationDocument delete(Integer assetreintegrationdocumentId) throws EntityNotFoundException;

	/**
	 * Finds all assetreintegrationdocuments.
	 * 
	 * @return A list of assetreintegrationdocuments.
	 */
	public Page<AssetReintegrationDocument> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AssetReintegrationDocument> findAll(Pageable pageable);
	
	/**
	 * Finds assetreintegrationdocument by id.
	 * 
	 * @param id
	 *            The id of the wanted assetreintegrationdocument.
	 * @return The found assetreintegrationdocument. If no assetreintegrationdocument is found, this method returns
	 *         null.
	 */
	public AssetReintegrationDocument findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a assetreintegrationdocument.
	 * 
	 * @param updated
	 *            The information of the updated assetreintegrationdocument.
	 * @return The updated assetreintegrationdocument.
	 * @throws EntityNotFoundException
	 *             if no assetreintegrationdocument is found with given id.
	 */
	public AssetReintegrationDocument update(AssetReintegrationDocument updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the assetreintegrationdocuments in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the assetreintegrationdocument.
	 */

	public long countAll();


    public Page<AssetReintegrationDocument> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

