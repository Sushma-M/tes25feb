/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class VacationDayCredit.
 * @see com.test_25feb.dynamohr126tabs.VacationDayCredit
 */

public interface VacationDayCreditService {
   /**
	 * Creates a new vacationdaycredit.
	 * 
	 * @param created
	 *            The information of the created vacationdaycredit.
	 * @return The created vacationdaycredit.
	 */
	public VacationDayCredit create(VacationDayCredit created);

	/**
	 * Deletes a vacationdaycredit.
	 * 
	 * @param vacationdaycreditId
	 *            The id of the deleted vacationdaycredit.
	 * @return The deleted vacationdaycredit.
	 * @throws EntityNotFoundException
	 *             if no vacationdaycredit is found with the given id.
	 */
	public VacationDayCredit delete(Integer vacationdaycreditId) throws EntityNotFoundException;

	/**
	 * Finds all vacationdaycredits.
	 * 
	 * @return A list of vacationdaycredits.
	 */
	public Page<VacationDayCredit> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<VacationDayCredit> findAll(Pageable pageable);
	
	/**
	 * Finds vacationdaycredit by id.
	 * 
	 * @param id
	 *            The id of the wanted vacationdaycredit.
	 * @return The found vacationdaycredit. If no vacationdaycredit is found, this method returns
	 *         null.
	 */
	public VacationDayCredit findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a vacationdaycredit.
	 * 
	 * @param updated
	 *            The information of the updated vacationdaycredit.
	 * @return The updated vacationdaycredit.
	 * @throws EntityNotFoundException
	 *             if no vacationdaycredit is found with given id.
	 */
	public VacationDayCredit update(VacationDayCredit updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the vacationdaycredits in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the vacationdaycredit.
	 */

	public long countAll();


    public Page<VacationDayCredit> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

