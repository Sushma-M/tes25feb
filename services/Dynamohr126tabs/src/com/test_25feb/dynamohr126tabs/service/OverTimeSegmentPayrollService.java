/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class OverTimeSegmentPayroll.
 * @see com.test_25feb.dynamohr126tabs.OverTimeSegmentPayroll
 */

public interface OverTimeSegmentPayrollService {
   /**
	 * Creates a new overtimesegmentpayroll.
	 * 
	 * @param created
	 *            The information of the created overtimesegmentpayroll.
	 * @return The created overtimesegmentpayroll.
	 */
	public OverTimeSegmentPayroll create(OverTimeSegmentPayroll created);

	/**
	 * Deletes a overtimesegmentpayroll.
	 * 
	 * @param overtimesegmentpayrollId
	 *            The id of the deleted overtimesegmentpayroll.
	 * @return The deleted overtimesegmentpayroll.
	 * @throws EntityNotFoundException
	 *             if no overtimesegmentpayroll is found with the given id.
	 */
	public OverTimeSegmentPayroll delete(Integer overtimesegmentpayrollId) throws EntityNotFoundException;

	/**
	 * Finds all overtimesegmentpayrolls.
	 * 
	 * @return A list of overtimesegmentpayrolls.
	 */
	public Page<OverTimeSegmentPayroll> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<OverTimeSegmentPayroll> findAll(Pageable pageable);
	
	/**
	 * Finds overtimesegmentpayroll by id.
	 * 
	 * @param id
	 *            The id of the wanted overtimesegmentpayroll.
	 * @return The found overtimesegmentpayroll. If no overtimesegmentpayroll is found, this method returns
	 *         null.
	 */
	public OverTimeSegmentPayroll findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a overtimesegmentpayroll.
	 * 
	 * @param updated
	 *            The information of the updated overtimesegmentpayroll.
	 * @return The updated overtimesegmentpayroll.
	 * @throws EntityNotFoundException
	 *             if no overtimesegmentpayroll is found with given id.
	 */
	public OverTimeSegmentPayroll update(OverTimeSegmentPayroll updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the overtimesegmentpayrolls in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the overtimesegmentpayroll.
	 */

	public long countAll();


    public Page<OverTimeSegmentPayroll> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

