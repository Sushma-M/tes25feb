/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class WorkPositionRequiement.
 * @see com.test_25feb.dynamohr126tabs.WorkPositionRequiement
 */

public interface WorkPositionRequiementService {
   /**
	 * Creates a new workpositionrequiement.
	 * 
	 * @param created
	 *            The information of the created workpositionrequiement.
	 * @return The created workpositionrequiement.
	 */
	public WorkPositionRequiement create(WorkPositionRequiement created);

	/**
	 * Deletes a workpositionrequiement.
	 * 
	 * @param workpositionrequiementId
	 *            The id of the deleted workpositionrequiement.
	 * @return The deleted workpositionrequiement.
	 * @throws EntityNotFoundException
	 *             if no workpositionrequiement is found with the given id.
	 */
	public WorkPositionRequiement delete(Integer workpositionrequiementId) throws EntityNotFoundException;

	/**
	 * Finds all workpositionrequiements.
	 * 
	 * @return A list of workpositionrequiements.
	 */
	public Page<WorkPositionRequiement> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<WorkPositionRequiement> findAll(Pageable pageable);
	
	/**
	 * Finds workpositionrequiement by id.
	 * 
	 * @param id
	 *            The id of the wanted workpositionrequiement.
	 * @return The found workpositionrequiement. If no workpositionrequiement is found, this method returns
	 *         null.
	 */
	public WorkPositionRequiement findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a workpositionrequiement.
	 * 
	 * @param updated
	 *            The information of the updated workpositionrequiement.
	 * @return The updated workpositionrequiement.
	 * @throws EntityNotFoundException
	 *             if no workpositionrequiement is found with given id.
	 */
	public WorkPositionRequiement update(WorkPositionRequiement updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the workpositionrequiements in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the workpositionrequiement.
	 */

	public long countAll();


    public Page<WorkPositionRequiement> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

