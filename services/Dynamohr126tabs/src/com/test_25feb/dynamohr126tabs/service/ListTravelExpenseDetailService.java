/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class ListTravelExpenseDetail.
 * @see com.test_25feb.dynamohr126tabs.ListTravelExpenseDetail
 */

public interface ListTravelExpenseDetailService {
   /**
	 * Creates a new listtravelexpensedetail.
	 * 
	 * @param created
	 *            The information of the created listtravelexpensedetail.
	 * @return The created listtravelexpensedetail.
	 */
	public ListTravelExpenseDetail create(ListTravelExpenseDetail created);

	/**
	 * Deletes a listtravelexpensedetail.
	 * 
	 * @param listtravelexpensedetailId
	 *            The id of the deleted listtravelexpensedetail.
	 * @return The deleted listtravelexpensedetail.
	 * @throws EntityNotFoundException
	 *             if no listtravelexpensedetail is found with the given id.
	 */
	public ListTravelExpenseDetail delete(Integer listtravelexpensedetailId) throws EntityNotFoundException;

	/**
	 * Finds all listtravelexpensedetails.
	 * 
	 * @return A list of listtravelexpensedetails.
	 */
	public Page<ListTravelExpenseDetail> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<ListTravelExpenseDetail> findAll(Pageable pageable);
	
	/**
	 * Finds listtravelexpensedetail by id.
	 * 
	 * @param id
	 *            The id of the wanted listtravelexpensedetail.
	 * @return The found listtravelexpensedetail. If no listtravelexpensedetail is found, this method returns
	 *         null.
	 */
	public ListTravelExpenseDetail findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a listtravelexpensedetail.
	 * 
	 * @param updated
	 *            The information of the updated listtravelexpensedetail.
	 * @return The updated listtravelexpensedetail.
	 * @throws EntityNotFoundException
	 *             if no listtravelexpensedetail is found with given id.
	 */
	public ListTravelExpenseDetail update(ListTravelExpenseDetail updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the listtravelexpensedetails in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the listtravelexpensedetail.
	 */

	public long countAll();


    public Page<ListTravelExpenseDetail> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

