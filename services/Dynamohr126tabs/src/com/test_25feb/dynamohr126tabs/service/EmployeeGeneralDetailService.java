/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_25feb.dynamohr126tabs.*;

/**
 * Service object for domain model class EmployeeGeneralDetail.
 * @see com.test_25feb.dynamohr126tabs.EmployeeGeneralDetail
 */

public interface EmployeeGeneralDetailService {
   /**
	 * Creates a new employeegeneraldetail.
	 * 
	 * @param created
	 *            The information of the created employeegeneraldetail.
	 * @return The created employeegeneraldetail.
	 */
	public EmployeeGeneralDetail create(EmployeeGeneralDetail created);

	/**
	 * Deletes a employeegeneraldetail.
	 * 
	 * @param employeegeneraldetailId
	 *            The id of the deleted employeegeneraldetail.
	 * @return The deleted employeegeneraldetail.
	 * @throws EntityNotFoundException
	 *             if no employeegeneraldetail is found with the given id.
	 */
	public EmployeeGeneralDetail delete(Integer employeegeneraldetailId) throws EntityNotFoundException;

	/**
	 * Finds all employeegeneraldetails.
	 * 
	 * @return A list of employeegeneraldetails.
	 */
	public Page<EmployeeGeneralDetail> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<EmployeeGeneralDetail> findAll(Pageable pageable);
	
	/**
	 * Finds employeegeneraldetail by id.
	 * 
	 * @param id
	 *            The id of the wanted employeegeneraldetail.
	 * @return The found employeegeneraldetail. If no employeegeneraldetail is found, this method returns
	 *         null.
	 */
	public EmployeeGeneralDetail findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a employeegeneraldetail.
	 * 
	 * @param updated
	 *            The information of the updated employeegeneraldetail.
	 * @return The updated employeegeneraldetail.
	 * @throws EntityNotFoundException
	 *             if no employeegeneraldetail is found with given id.
	 */
	public EmployeeGeneralDetail update(EmployeeGeneralDetail updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the employeegeneraldetails in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the employeegeneraldetail.
	 */

	public long countAll();


    public Page<EmployeeGeneralDetail> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

