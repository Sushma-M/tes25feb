/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * OverTimeSegmentPayroll generated by hbm2java
 */
@Entity
@Table(name="`over_time_segment_payroll`"
)

public class OverTimeSegmentPayroll  implements java.io.Serializable {

    private Integer idOverTimeSegmentPayroll;


@Type(type="DateTime")
    private LocalDateTime startTime;


@Type(type="DateTime")
    private LocalDateTime endTime;
    private Double hourDifference;
    private Double rate;
    private Double hoursByRate;
    private BigDecimal value_;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Currency currency;
    private ListOvertimePayroll listOvertimePayroll;
    private TypeExtraHourSegment typeExtraHourSegment;

    public OverTimeSegmentPayroll() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_over_time_segment_payroll`", nullable=false, precision=10)
    public Integer getIdOverTimeSegmentPayroll() {
        return this.idOverTimeSegmentPayroll;
    }
    
    public void setIdOverTimeSegmentPayroll(Integer idOverTimeSegmentPayroll) {
        this.idOverTimeSegmentPayroll = idOverTimeSegmentPayroll;
    }

    

    @Column(name="`start_time`", nullable=false)
    public LocalDateTime getStartTime() {
        return this.startTime;
    }
    
    public void setStartTime(LocalDateTime startTime) {
        this.startTime = startTime;
    }

    

    @Column(name="`end_time`", nullable=false)
    public LocalDateTime getEndTime() {
        return this.endTime;
    }
    
    public void setEndTime(LocalDateTime endTime) {
        this.endTime = endTime;
    }

    

    @Column(name="`hour_difference`", nullable=false, scale=4)
    public Double getHourDifference() {
        return this.hourDifference;
    }
    
    public void setHourDifference(Double hourDifference) {
        this.hourDifference = hourDifference;
    }

    

    @Column(name="`rate`", nullable=false, scale=4)
    public Double getRate() {
        return this.rate;
    }
    
    public void setRate(Double rate) {
        this.rate = rate;
    }

    

    @Column(name="`hours_by_rate`", nullable=false, scale=4)
    public Double getHoursByRate() {
        return this.hoursByRate;
    }
    
    public void setHoursByRate(Double hoursByRate) {
        this.hoursByRate = hoursByRate;
    }

    

    @Column(name="`value?`", nullable=false)
    public BigDecimal getValue_() {
        return this.value_;
    }
    
    public void setValue_(BigDecimal value_) {
        this.value_ = value_;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_currency`", nullable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_list_overtime_payroll`", nullable=false)
    public ListOvertimePayroll getListOvertimePayroll() {
        return this.listOvertimePayroll;
    }
    
    public void setListOvertimePayroll(ListOvertimePayroll listOvertimePayroll) {
        this.listOvertimePayroll = listOvertimePayroll;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_extra_hour_segment`", nullable=false)
    public TypeExtraHourSegment getTypeExtraHourSegment() {
        return this.typeExtraHourSegment;
    }
    
    public void setTypeExtraHourSegment(TypeExtraHourSegment typeExtraHourSegment) {
        this.typeExtraHourSegment = typeExtraHourSegment;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof OverTimeSegmentPayroll) )
		    return false;

		 OverTimeSegmentPayroll that = (OverTimeSegmentPayroll) o;

		 return ( (this.getIdOverTimeSegmentPayroll()==that.getIdOverTimeSegmentPayroll()) || ( this.getIdOverTimeSegmentPayroll()!=null && that.getIdOverTimeSegmentPayroll()!=null && this.getIdOverTimeSegmentPayroll().equals(that.getIdOverTimeSegmentPayroll()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdOverTimeSegmentPayroll() == null ? 0 : this.getIdOverTimeSegmentPayroll().hashCode() );

         return result;
    }


}

