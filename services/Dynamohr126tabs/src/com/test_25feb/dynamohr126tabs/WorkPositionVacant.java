/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * WorkPositionVacant generated by hbm2java
 */
@Entity
@Table(name="`work_position_vacant`"
)

public class WorkPositionVacant  implements java.io.Serializable {

    private Integer idWorkPositionVacant;
    private String description_;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Set<ApplicantToPosition> applicantToPositionsForFkWorkPositionVacant = new HashSet<ApplicantToPosition>(0);
    private ApplicantToPosition applicantToPositionByFkAspiranteAsignado;
    private WorkPosition workPosition;

    public WorkPositionVacant() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_work_position_vacant`", nullable=false, precision=10)
    public Integer getIdWorkPositionVacant() {
        return this.idWorkPositionVacant;
    }
    
    public void setIdWorkPositionVacant(Integer idWorkPositionVacant) {
        this.idWorkPositionVacant = idWorkPositionVacant;
    }

    

    @Column(name="`description?`", nullable=false)
    public String getDescription_() {
        return this.description_;
    }
    
    public void setDescription_(String description_) {
        this.description_ = description_;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="workPositionVacantByFkWorkPositionVacant")
    public Set<ApplicantToPosition> getApplicantToPositionsForFkWorkPositionVacant() {
        return this.applicantToPositionsForFkWorkPositionVacant;
    }
    
    public void setApplicantToPositionsForFkWorkPositionVacant(Set<ApplicantToPosition> applicantToPositionsForFkWorkPositionVacant) {
        this.applicantToPositionsForFkWorkPositionVacant = applicantToPositionsForFkWorkPositionVacant;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_aspirante_asignado`")
    public ApplicantToPosition getApplicantToPositionByFkAspiranteAsignado() {
        return this.applicantToPositionByFkAspiranteAsignado;
    }
    
    public void setApplicantToPositionByFkAspiranteAsignado(ApplicantToPosition applicantToPositionByFkAspiranteAsignado) {
        this.applicantToPositionByFkAspiranteAsignado = applicantToPositionByFkAspiranteAsignado;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_work_position`", nullable=false)
    public WorkPosition getWorkPosition() {
        return this.workPosition;
    }
    
    public void setWorkPosition(WorkPosition workPosition) {
        this.workPosition = workPosition;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof WorkPositionVacant) )
		    return false;

		 WorkPositionVacant that = (WorkPositionVacant) o;

		 return ( (this.getIdWorkPositionVacant()==that.getIdWorkPositionVacant()) || ( this.getIdWorkPositionVacant()!=null && that.getIdWorkPositionVacant()!=null && this.getIdWorkPositionVacant().equals(that.getIdWorkPositionVacant()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdWorkPositionVacant() == null ? 0 : this.getIdWorkPositionVacant().hashCode() );

         return result;
    }


}

