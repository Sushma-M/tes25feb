/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * JustifiedAbsense generated by hbm2java
 */
@Entity
@Table(name="`justified_absense`"
)

public class JustifiedAbsense  implements java.io.Serializable {

    private Integer idJustifiedAbsense;


@Type(type="DateTime")
    private LocalDateTime absenceDateStart;


@Type(type="DateTime")
    private LocalDateTime absenceDateFinal;
    private Integer totalJustifiedDays;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Set<JustifiedLeaveFile> justifiedLeaveFiles = new HashSet<JustifiedLeaveFile>(0);
    private Employee employee;
    private TypeAbsenceJustification typeAbsenceJustification;

    public JustifiedAbsense() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_justified_absense`", nullable=false, precision=10)
    public Integer getIdJustifiedAbsense() {
        return this.idJustifiedAbsense;
    }
    
    public void setIdJustifiedAbsense(Integer idJustifiedAbsense) {
        this.idJustifiedAbsense = idJustifiedAbsense;
    }

    

    @Column(name="`absence_date_start`", nullable=false, length=10)
    public LocalDateTime getAbsenceDateStart() {
        return this.absenceDateStart;
    }
    
    public void setAbsenceDateStart(LocalDateTime absenceDateStart) {
        this.absenceDateStart = absenceDateStart;
    }

    

    @Column(name="`absence_date_final`", nullable=false, length=10)
    public LocalDateTime getAbsenceDateFinal() {
        return this.absenceDateFinal;
    }
    
    public void setAbsenceDateFinal(LocalDateTime absenceDateFinal) {
        this.absenceDateFinal = absenceDateFinal;
    }

    

    @Column(name="`total_justified_days`", nullable=false, precision=10)
    public Integer getTotalJustifiedDays() {
        return this.totalJustifiedDays;
    }
    
    public void setTotalJustifiedDays(Integer totalJustifiedDays) {
        this.totalJustifiedDays = totalJustifiedDays;
    }

    

    @Column(name="`observation`")
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="justifiedAbsense")
    public Set<JustifiedLeaveFile> getJustifiedLeaveFiles() {
        return this.justifiedLeaveFiles;
    }
    
    public void setJustifiedLeaveFiles(Set<JustifiedLeaveFile> justifiedLeaveFiles) {
        this.justifiedLeaveFiles = justifiedLeaveFiles;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_employee`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_absence_justification`", nullable=false)
    public TypeAbsenceJustification getTypeAbsenceJustification() {
        return this.typeAbsenceJustification;
    }
    
    public void setTypeAbsenceJustification(TypeAbsenceJustification typeAbsenceJustification) {
        this.typeAbsenceJustification = typeAbsenceJustification;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof JustifiedAbsense) )
		    return false;

		 JustifiedAbsense that = (JustifiedAbsense) o;

		 return ( (this.getIdJustifiedAbsense()==that.getIdJustifiedAbsense()) || ( this.getIdJustifiedAbsense()!=null && that.getIdJustifiedAbsense()!=null && this.getIdJustifiedAbsense().equals(that.getIdJustifiedAbsense()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdJustifiedAbsense() == null ? 0 : this.getIdJustifiedAbsense().hashCode() );

         return result;
    }


}

