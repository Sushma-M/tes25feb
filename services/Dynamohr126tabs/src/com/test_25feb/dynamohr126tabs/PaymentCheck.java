/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * PaymentCheck generated by hbm2java
 */
@Entity
@Table(name="`payment_check`"
)

public class PaymentCheck  implements java.io.Serializable {

    private Integer idPaymentCheck;


@Type(type="DateTime")
    private LocalDateTime creationDate;


@Type(type="DateTime")
    private LocalDateTime imprintDate;
    private Double amount;
    private Integer noCheque;
    private Boolean impreso;
    private String observation;
    private Integer modUser;
    private Integer modLocation;
    private Date modDate;
    private PayrollDetail payrollDetail;
    private User user;

    public PaymentCheck() {
    }


    @Id 
    

    @Column(name="`id_payment_check`", nullable=false, precision=10)
    public Integer getIdPaymentCheck() {
        return this.idPaymentCheck;
    }
    
    public void setIdPaymentCheck(Integer idPaymentCheck) {
        this.idPaymentCheck = idPaymentCheck;
    }

    

    @Column(name="`creation_date`", nullable=false, length=10)
    public LocalDateTime getCreationDate() {
        return this.creationDate;
    }
    
    public void setCreationDate(LocalDateTime creationDate) {
        this.creationDate = creationDate;
    }

    

    @Column(name="`imprint_date`")
    public LocalDateTime getImprintDate() {
        return this.imprintDate;
    }
    
    public void setImprintDate(LocalDateTime imprintDate) {
        this.imprintDate = imprintDate;
    }

    

    @Column(name="`amount`", nullable=false, scale=4)
    public Double getAmount() {
        return this.amount;
    }
    
    public void setAmount(Double amount) {
        this.amount = amount;
    }

    

    @Column(name="`no_cheque`", nullable=false, precision=10)
    public Integer getNoCheque() {
        return this.noCheque;
    }
    
    public void setNoCheque(Integer noCheque) {
        this.noCheque = noCheque;
    }

    

    @Column(name="`impreso`", nullable=false)
    public Boolean getImpreso() {
        return this.impreso;
    }
    
    public void setImpreso(Boolean impreso) {
        this.impreso = impreso;
    }

    

    @Column(name="`observation`", length=250)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_payroll_detail`", nullable=false)
    public PayrollDetail getPayrollDetail() {
        return this.payrollDetail;
    }
    
    public void setPayrollDetail(PayrollDetail payrollDetail) {
        this.payrollDetail = payrollDetail;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_prints`")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof PaymentCheck) )
		    return false;

		 PaymentCheck that = (PaymentCheck) o;

		 return ( (this.getIdPaymentCheck()==that.getIdPaymentCheck()) || ( this.getIdPaymentCheck()!=null && that.getIdPaymentCheck()!=null && this.getIdPaymentCheck().equals(that.getIdPaymentCheck()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdPaymentCheck() == null ? 0 : this.getIdPaymentCheck().hashCode() );

         return result;
    }


}

