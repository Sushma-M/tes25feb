/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * MobileNumber generated by hbm2java
 */
@Entity
@Table(name="`mobile_number`"
)

public class MobileNumber  implements java.io.Serializable {

    private Integer idCellphone;
    private Double companyValueBond;
    private String number;
    private String observation;
    private Integer modUser;
    private Date modDate;
    private Set<ListEmployeePhone> listEmployeePhones = new HashSet<ListEmployeePhone>(0);
    private Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls = new HashSet<ListCelphoneDetailPayroll>(0);
    private Currency currency;
    private TypeCellularCompany typeCellularCompany;

    public MobileNumber() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_cellphone`", nullable=false, precision=10)
    public Integer getIdCellphone() {
        return this.idCellphone;
    }
    
    public void setIdCellphone(Integer idCellphone) {
        this.idCellphone = idCellphone;
    }

    

    @Column(name="`company_value_bond`", nullable=false, scale=4)
    public Double getCompanyValueBond() {
        return this.companyValueBond;
    }
    
    public void setCompanyValueBond(Double companyValueBond) {
        this.companyValueBond = companyValueBond;
    }

    

    @Column(name="`number`", nullable=false, length=12)
    public String getNumber() {
        return this.number;
    }
    
    public void setNumber(String number) {
        this.number = number;
    }

    

    @Column(name="`observation`")
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="mobileNumber")
    public Set<ListEmployeePhone> getListEmployeePhones() {
        return this.listEmployeePhones;
    }
    
    public void setListEmployeePhones(Set<ListEmployeePhone> listEmployeePhones) {
        this.listEmployeePhones = listEmployeePhones;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="mobileNumber")
    public Set<ListCelphoneDetailPayroll> getListCelphoneDetailPayrolls() {
        return this.listCelphoneDetailPayrolls;
    }
    
    public void setListCelphoneDetailPayrolls(Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls) {
        this.listCelphoneDetailPayrolls = listCelphoneDetailPayrolls;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_currency`", nullable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_cellular_company`", nullable=false)
    public TypeCellularCompany getTypeCellularCompany() {
        return this.typeCellularCompany;
    }
    
    public void setTypeCellularCompany(TypeCellularCompany typeCellularCompany) {
        this.typeCellularCompany = typeCellularCompany;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof MobileNumber) )
		    return false;

		 MobileNumber that = (MobileNumber) o;

		 return ( (this.getIdCellphone()==that.getIdCellphone()) || ( this.getIdCellphone()!=null && that.getIdCellphone()!=null && this.getIdCellphone().equals(that.getIdCellphone()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdCellphone() == null ? 0 : this.getIdCellphone().hashCode() );

         return result;
    }


}

