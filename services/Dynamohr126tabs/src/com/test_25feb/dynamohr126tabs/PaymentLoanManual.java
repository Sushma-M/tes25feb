/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * PaymentLoanManual generated by hbm2java
 */
@Entity
@Table(name="`payment_loan_manual`"
)

public class PaymentLoanManual  implements java.io.Serializable {

    private Integer idPaymentLoanManual;
    private Double valuePaid;
    private Double interestRate;
    private Double interestValue;
    private Double totalValue;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Currency currency;
    private Loan loan;

    public PaymentLoanManual() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_payment_loan_manual`", nullable=false, precision=10)
    public Integer getIdPaymentLoanManual() {
        return this.idPaymentLoanManual;
    }
    
    public void setIdPaymentLoanManual(Integer idPaymentLoanManual) {
        this.idPaymentLoanManual = idPaymentLoanManual;
    }

    

    @Column(name="`value_paid`", nullable=false, scale=4)
    public Double getValuePaid() {
        return this.valuePaid;
    }
    
    public void setValuePaid(Double valuePaid) {
        this.valuePaid = valuePaid;
    }

    

    @Column(name="`interest_rate`", nullable=false, scale=4)
    public Double getInterestRate() {
        return this.interestRate;
    }
    
    public void setInterestRate(Double interestRate) {
        this.interestRate = interestRate;
    }

    

    @Column(name="`interest_value`", nullable=false, scale=4)
    public Double getInterestValue() {
        return this.interestValue;
    }
    
    public void setInterestValue(Double interestValue) {
        this.interestValue = interestValue;
    }

    

    @Column(name="`total_value`", nullable=false, scale=4)
    public Double getTotalValue() {
        return this.totalValue;
    }
    
    public void setTotalValue(Double totalValue) {
        this.totalValue = totalValue;
    }

    

    @Column(name="`observation`", length=100)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_currency`", nullable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_loan`", nullable=false)
    public Loan getLoan() {
        return this.loan;
    }
    
    public void setLoan(Loan loan) {
        this.loan = loan;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof PaymentLoanManual) )
		    return false;

		 PaymentLoanManual that = (PaymentLoanManual) o;

		 return ( (this.getIdPaymentLoanManual()==that.getIdPaymentLoanManual()) || ( this.getIdPaymentLoanManual()!=null && that.getIdPaymentLoanManual()!=null && this.getIdPaymentLoanManual().equals(that.getIdPaymentLoanManual()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdPaymentLoanManual() == null ? 0 : this.getIdPaymentLoanManual().hashCode() );

         return result;
    }


}

