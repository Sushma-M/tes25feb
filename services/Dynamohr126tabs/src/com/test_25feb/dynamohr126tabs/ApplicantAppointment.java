/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ApplicantAppointment generated by hbm2java
 */
@Entity
@Table(name="`applicant_appointment`"
)

public class ApplicantAppointment  implements java.io.Serializable {

    private Integer idApplicantAppointment;


@Type(type="DateTime")
    private LocalDateTime startDate;


@Type(type="DateTime")
    private LocalDateTime finalDate;
    private String nameEvent;
    private String textColor;
    private Boolean confirmation;


@Type(type="DateTime")
    private LocalDateTime confirmationDate;
    private String observation;
    private ApplicantToPosition applicantToPosition;

    public ApplicantAppointment() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_applicant_appointment`", nullable=false, precision=10)
    public Integer getIdApplicantAppointment() {
        return this.idApplicantAppointment;
    }
    
    public void setIdApplicantAppointment(Integer idApplicantAppointment) {
        this.idApplicantAppointment = idApplicantAppointment;
    }

    

    @Column(name="`start_date`", nullable=false)
    public LocalDateTime getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(LocalDateTime startDate) {
        this.startDate = startDate;
    }

    

    @Column(name="`final_date`", nullable=false)
    public LocalDateTime getFinalDate() {
        return this.finalDate;
    }
    
    public void setFinalDate(LocalDateTime finalDate) {
        this.finalDate = finalDate;
    }

    

    @Column(name="`name_event`", nullable=false)
    public String getNameEvent() {
        return this.nameEvent;
    }
    
    public void setNameEvent(String nameEvent) {
        this.nameEvent = nameEvent;
    }

    

    @Column(name="`text_color`", nullable=false, length=7)
    public String getTextColor() {
        return this.textColor;
    }
    
    public void setTextColor(String textColor) {
        this.textColor = textColor;
    }

    

    @Column(name="`confirmation`", nullable=false)
    public Boolean getConfirmation() {
        return this.confirmation;
    }
    
    public void setConfirmation(Boolean confirmation) {
        this.confirmation = confirmation;
    }

    

    @Column(name="`confirmation_date`")
    public LocalDateTime getConfirmationDate() {
        return this.confirmationDate;
    }
    
    public void setConfirmationDate(LocalDateTime confirmationDate) {
        this.confirmationDate = confirmationDate;
    }

    

    @Column(name="`observation`", length=127)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_applicant_to_positionp`", nullable=false)
    public ApplicantToPosition getApplicantToPosition() {
        return this.applicantToPosition;
    }
    
    public void setApplicantToPosition(ApplicantToPosition applicantToPosition) {
        this.applicantToPosition = applicantToPosition;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ApplicantAppointment) )
		    return false;

		 ApplicantAppointment that = (ApplicantAppointment) o;

		 return ( (this.getIdApplicantAppointment()==that.getIdApplicantAppointment()) || ( this.getIdApplicantAppointment()!=null && that.getIdApplicantAppointment()!=null && this.getIdApplicantAppointment().equals(that.getIdApplicantAppointment()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdApplicantAppointment() == null ? 0 : this.getIdApplicantAppointment().hashCode() );

         return result;
    }


}

