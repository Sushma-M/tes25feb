/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * BadgeEmployee generated by hbm2java
 */
@Entity
@Table(name="`badge_employee`"
)

public class BadgeEmployee  implements java.io.Serializable {

    private Integer idBadgeEmployee;
    private Boolean impreso;


@Type(type="DateTime")
    private LocalDateTime dateQueue;
    private Integer userQueue;


@Type(type="DateTime")
    private LocalDateTime expirationDate;


@Type(type="DateTime")
    private LocalDateTime imprintDate;
    private Integer userPrinting;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Employee employee;

    public BadgeEmployee() {
    }


    @Id 
    

    @Column(name="`id_badge_employee`", nullable=false, precision=10)
    public Integer getIdBadgeEmployee() {
        return this.idBadgeEmployee;
    }
    
    public void setIdBadgeEmployee(Integer idBadgeEmployee) {
        this.idBadgeEmployee = idBadgeEmployee;
    }

    

    @Column(name="`impreso`", nullable=false)
    public Boolean getImpreso() {
        return this.impreso;
    }
    
    public void setImpreso(Boolean impreso) {
        this.impreso = impreso;
    }

    

    @Column(name="`date_queue`", nullable=false)
    public LocalDateTime getDateQueue() {
        return this.dateQueue;
    }
    
    public void setDateQueue(LocalDateTime dateQueue) {
        this.dateQueue = dateQueue;
    }

    

    @Column(name="`user_queue`", nullable=false, precision=10)
    public Integer getUserQueue() {
        return this.userQueue;
    }
    
    public void setUserQueue(Integer userQueue) {
        this.userQueue = userQueue;
    }

    

    @Column(name="`expiration_date`", nullable=false)
    public LocalDateTime getExpirationDate() {
        return this.expirationDate;
    }
    
    public void setExpirationDate(LocalDateTime expirationDate) {
        this.expirationDate = expirationDate;
    }

    

    @Column(name="`imprint_date`")
    public LocalDateTime getImprintDate() {
        return this.imprintDate;
    }
    
    public void setImprintDate(LocalDateTime imprintDate) {
        this.imprintDate = imprintDate;
    }

    

    @Column(name="`user_printing`", precision=10)
    public Integer getUserPrinting() {
        return this.userPrinting;
    }
    
    public void setUserPrinting(Integer userPrinting) {
        this.userPrinting = userPrinting;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_employee`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof BadgeEmployee) )
		    return false;

		 BadgeEmployee that = (BadgeEmployee) o;

		 return ( (this.getIdBadgeEmployee()==that.getIdBadgeEmployee()) || ( this.getIdBadgeEmployee()!=null && that.getIdBadgeEmployee()!=null && this.getIdBadgeEmployee().equals(that.getIdBadgeEmployee()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdBadgeEmployee() == null ? 0 : this.getIdBadgeEmployee().hashCode() );

         return result;
    }


}

