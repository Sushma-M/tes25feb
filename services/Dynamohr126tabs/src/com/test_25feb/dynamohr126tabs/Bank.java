/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Bank generated by hbm2java
 */
@Entity
@Table(name="`bank`"
)

public class Bank  implements java.io.Serializable {

    private Integer idBank;
    private String name;
    private String contact;
    private String direction;
    private String noSwift;
    private String observation;
    private Integer modUser;
    private Date modDate;
    private Set<EmployeeSalary> employeeSalaries = new HashSet<EmployeeSalary>(0);

    public Bank() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_bank`", nullable=false, precision=10)
    public Integer getIdBank() {
        return this.idBank;
    }
    
    public void setIdBank(Integer idBank) {
        this.idBank = idBank;
    }

    

    @Column(name="`name`", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="`contact`", nullable=false, length=64)
    public String getContact() {
        return this.contact;
    }
    
    public void setContact(String contact) {
        this.contact = contact;
    }

    

    @Column(name="`direction`", nullable=false, length=64)
    public String getDirection() {
        return this.direction;
    }
    
    public void setDirection(String direction) {
        this.direction = direction;
    }

    

    @Column(name="`no_swift`", nullable=false, length=24)
    public String getNoSwift() {
        return this.noSwift;
    }
    
    public void setNoSwift(String noSwift) {
        this.noSwift = noSwift;
    }

    

    @Column(name="`observation`", length=150)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="bank")
    public Set<EmployeeSalary> getEmployeeSalaries() {
        return this.employeeSalaries;
    }
    
    public void setEmployeeSalaries(Set<EmployeeSalary> employeeSalaries) {
        this.employeeSalaries = employeeSalaries;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Bank) )
		    return false;

		 Bank that = (Bank) o;

		 return ( (this.getIdBank()==that.getIdBank()) || ( this.getIdBank()!=null && that.getIdBank()!=null && this.getIdBank().equals(that.getIdBank()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdBank() == null ? 0 : this.getIdBank().hashCode() );

         return result;
    }


}

