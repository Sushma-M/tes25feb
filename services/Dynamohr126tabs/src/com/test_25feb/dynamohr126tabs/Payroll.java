/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Payroll generated by hbm2java
 */
@Entity
@Table(name="`payroll`"
)

public class Payroll  implements java.io.Serializable {

    private Integer idPayroll;


@Type(type="DateTime")
    private LocalDateTime startDate;


@Type(type="DateTime")
    private LocalDateTime finalDate;


@Type(type="DateTime")
    private LocalDateTime developmentDate;
    private Boolean confirmation;


@Type(type="DateTime")
    private LocalDateTime confirmationDate;
    private Boolean impresa;


@Type(type="DateTime")
    private LocalDateTime imprintDate;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Set<PayrollDetail> payrollDetails = new HashSet<PayrollDetail>(0);
    private Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls = new HashSet<ListCelphoneDetailPayroll>(0);
    private Currency currency;
    private TypeGenerationForm typeGenerationForm;
    private User userByFkUserConfirmation;
    private User userByFkUserElaborate;
    private User userByFkUserPrints;

    public Payroll() {
    }


    @Id 
    

    @Column(name="`id_payroll`", nullable=false, precision=10)
    public Integer getIdPayroll() {
        return this.idPayroll;
    }
    
    public void setIdPayroll(Integer idPayroll) {
        this.idPayroll = idPayroll;
    }

    

    @Column(name="`start_date`", nullable=false, length=10)
    public LocalDateTime getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(LocalDateTime startDate) {
        this.startDate = startDate;
    }

    

    @Column(name="`final_date`", nullable=false, length=10)
    public LocalDateTime getFinalDate() {
        return this.finalDate;
    }
    
    public void setFinalDate(LocalDateTime finalDate) {
        this.finalDate = finalDate;
    }

    

    @Column(name="`development_date`", nullable=false)
    public LocalDateTime getDevelopmentDate() {
        return this.developmentDate;
    }
    
    public void setDevelopmentDate(LocalDateTime developmentDate) {
        this.developmentDate = developmentDate;
    }

    

    @Column(name="`confirmation`", nullable=false)
    public Boolean getConfirmation() {
        return this.confirmation;
    }
    
    public void setConfirmation(Boolean confirmation) {
        this.confirmation = confirmation;
    }

    

    @Column(name="`confirmation_date`")
    public LocalDateTime getConfirmationDate() {
        return this.confirmationDate;
    }
    
    public void setConfirmationDate(LocalDateTime confirmationDate) {
        this.confirmationDate = confirmationDate;
    }

    

    @Column(name="`impresa`", nullable=false)
    public Boolean getImpresa() {
        return this.impresa;
    }
    
    public void setImpresa(Boolean impresa) {
        this.impresa = impresa;
    }

    

    @Column(name="`imprint_date`")
    public LocalDateTime getImprintDate() {
        return this.imprintDate;
    }
    
    public void setImprintDate(LocalDateTime imprintDate) {
        this.imprintDate = imprintDate;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="payroll")
    public Set<PayrollDetail> getPayrollDetails() {
        return this.payrollDetails;
    }
    
    public void setPayrollDetails(Set<PayrollDetail> payrollDetails) {
        this.payrollDetails = payrollDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="payroll")
    public Set<ListCelphoneDetailPayroll> getListCelphoneDetailPayrolls() {
        return this.listCelphoneDetailPayrolls;
    }
    
    public void setListCelphoneDetailPayrolls(Set<ListCelphoneDetailPayroll> listCelphoneDetailPayrolls) {
        this.listCelphoneDetailPayrolls = listCelphoneDetailPayrolls;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_currency`", nullable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_generation_form`", nullable=false)
    public TypeGenerationForm getTypeGenerationForm() {
        return this.typeGenerationForm;
    }
    
    public void setTypeGenerationForm(TypeGenerationForm typeGenerationForm) {
        this.typeGenerationForm = typeGenerationForm;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_confirmation`")
    public User getUserByFkUserConfirmation() {
        return this.userByFkUserConfirmation;
    }
    
    public void setUserByFkUserConfirmation(User userByFkUserConfirmation) {
        this.userByFkUserConfirmation = userByFkUserConfirmation;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_elaborate`", nullable=false)
    public User getUserByFkUserElaborate() {
        return this.userByFkUserElaborate;
    }
    
    public void setUserByFkUserElaborate(User userByFkUserElaborate) {
        this.userByFkUserElaborate = userByFkUserElaborate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_prints`")
    public User getUserByFkUserPrints() {
        return this.userByFkUserPrints;
    }
    
    public void setUserByFkUserPrints(User userByFkUserPrints) {
        this.userByFkUserPrints = userByFkUserPrints;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Payroll) )
		    return false;

		 Payroll that = (Payroll) o;

		 return ( (this.getIdPayroll()==that.getIdPayroll()) || ( this.getIdPayroll()!=null && that.getIdPayroll()!=null && this.getIdPayroll().equals(that.getIdPayroll()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdPayroll() == null ? 0 : this.getIdPayroll().hashCode() );

         return result;
    }


}

