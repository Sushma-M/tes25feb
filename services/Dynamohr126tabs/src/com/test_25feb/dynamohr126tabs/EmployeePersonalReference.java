/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * EmployeePersonalReference generated by hbm2java
 */
@Entity
@Table(name="`employee_personal_reference`"
)

public class EmployeePersonalReference  implements java.io.Serializable {

    private Integer idEmployeePersonalReference;
    private String firstName;
    private String secondName;
    private String surname;
    private String secondSurname;
    private String marriageName;
    private Boolean emergencyContact;
    private Character sex;
    private String employeeRelationship;
    private String direction;
    private String phone;
    private String email;
    private String mobileNumber;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Employee employee;

    public EmployeePersonalReference() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_employee_personal_reference`", nullable=false, precision=10)
    public Integer getIdEmployeePersonalReference() {
        return this.idEmployeePersonalReference;
    }
    
    public void setIdEmployeePersonalReference(Integer idEmployeePersonalReference) {
        this.idEmployeePersonalReference = idEmployeePersonalReference;
    }

    

    @Column(name="`first_name`", nullable=false, length=25)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    

    @Column(name="`second_name`", length=25)
    public String getSecondName() {
        return this.secondName;
    }
    
    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    

    @Column(name="`surname`", nullable=false, length=25)
    public String getSurname() {
        return this.surname;
    }
    
    public void setSurname(String surname) {
        this.surname = surname;
    }

    

    @Column(name="`second_surname`", length=25)
    public String getSecondSurname() {
        return this.secondSurname;
    }
    
    public void setSecondSurname(String secondSurname) {
        this.secondSurname = secondSurname;
    }

    

    @Column(name="`marriage_name`", length=25)
    public String getMarriageName() {
        return this.marriageName;
    }
    
    public void setMarriageName(String marriageName) {
        this.marriageName = marriageName;
    }

    

    @Column(name="`emergency_contact`", nullable=false)
    public Boolean getEmergencyContact() {
        return this.emergencyContact;
    }
    
    public void setEmergencyContact(Boolean emergencyContact) {
        this.emergencyContact = emergencyContact;
    }

    

    @Column(name="`sex`", nullable=false, length=1)
    public Character getSex() {
        return this.sex;
    }
    
    public void setSex(Character sex) {
        this.sex = sex;
    }

    

    @Column(name="`employee_relationship`", nullable=false, length=50)
    public String getEmployeeRelationship() {
        return this.employeeRelationship;
    }
    
    public void setEmployeeRelationship(String employeeRelationship) {
        this.employeeRelationship = employeeRelationship;
    }

    

    @Column(name="`direction`", length=100)
    public String getDirection() {
        return this.direction;
    }
    
    public void setDirection(String direction) {
        this.direction = direction;
    }

    

    @Column(name="`phone`", length=10)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    

    @Column(name="`email`", nullable=false, length=60)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    

    @Column(name="`mobile_number`", length=10)
    public String getMobileNumber() {
        return this.mobileNumber;
    }
    
    public void setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
    }

    

    @Column(name="`observation`")
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_employee`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof EmployeePersonalReference) )
		    return false;

		 EmployeePersonalReference that = (EmployeePersonalReference) o;

		 return ( (this.getIdEmployeePersonalReference()==that.getIdEmployeePersonalReference()) || ( this.getIdEmployeePersonalReference()!=null && that.getIdEmployeePersonalReference()!=null && this.getIdEmployeePersonalReference().equals(that.getIdEmployeePersonalReference()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdEmployeePersonalReference() == null ? 0 : this.getIdEmployeePersonalReference().hashCode() );

         return result;
    }


}

