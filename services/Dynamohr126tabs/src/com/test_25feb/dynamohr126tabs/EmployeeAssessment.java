/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * EmployeeAssessment generated by hbm2java
 */
@Entity
@Table(name="`employee_assessment`"
)

public class EmployeeAssessment  implements java.io.Serializable {

    private Integer idEmployeeAssessment;


@Type(type="DateTime")
    private LocalDateTime evaluationDate;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Employee employeeByFkEvaluatedEmployee;
    private Employee employeeByFkEvaluatingEmployee;
    private User user;
    private WorkPosition workPosition;
    private Set<AssessmentEmployeeData> assessmentEmployeeDatas = new HashSet<AssessmentEmployeeData>(0);

    public EmployeeAssessment() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_employee_assessment`", nullable=false, precision=10)
    public Integer getIdEmployeeAssessment() {
        return this.idEmployeeAssessment;
    }
    
    public void setIdEmployeeAssessment(Integer idEmployeeAssessment) {
        this.idEmployeeAssessment = idEmployeeAssessment;
    }

    

    @Column(name="`evaluation_date`", nullable=false)
    public LocalDateTime getEvaluationDate() {
        return this.evaluationDate;
    }
    
    public void setEvaluationDate(LocalDateTime evaluationDate) {
        this.evaluationDate = evaluationDate;
    }

    

    @Column(name="`observation`", nullable=false, length=150)
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_evaluated_employee`", nullable=false)
    public Employee getEmployeeByFkEvaluatedEmployee() {
        return this.employeeByFkEvaluatedEmployee;
    }
    
    public void setEmployeeByFkEvaluatedEmployee(Employee employeeByFkEvaluatedEmployee) {
        this.employeeByFkEvaluatedEmployee = employeeByFkEvaluatedEmployee;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_evaluating_employee`", nullable=false)
    public Employee getEmployeeByFkEvaluatingEmployee() {
        return this.employeeByFkEvaluatingEmployee;
    }
    
    public void setEmployeeByFkEvaluatingEmployee(Employee employeeByFkEvaluatingEmployee) {
        this.employeeByFkEvaluatingEmployee = employeeByFkEvaluatingEmployee;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_data_entry`", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_work_position_evaluated_employee`", nullable=false)
    public WorkPosition getWorkPosition() {
        return this.workPosition;
    }
    
    public void setWorkPosition(WorkPosition workPosition) {
        this.workPosition = workPosition;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employeeAssessment")
    public Set<AssessmentEmployeeData> getAssessmentEmployeeDatas() {
        return this.assessmentEmployeeDatas;
    }
    
    public void setAssessmentEmployeeDatas(Set<AssessmentEmployeeData> assessmentEmployeeDatas) {
        this.assessmentEmployeeDatas = assessmentEmployeeDatas;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof EmployeeAssessment) )
		    return false;

		 EmployeeAssessment that = (EmployeeAssessment) o;

		 return ( (this.getIdEmployeeAssessment()==that.getIdEmployeeAssessment()) || ( this.getIdEmployeeAssessment()!=null && that.getIdEmployeeAssessment()!=null && this.getIdEmployeeAssessment().equals(that.getIdEmployeeAssessment()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdEmployeeAssessment() == null ? 0 : this.getIdEmployeeAssessment().hashCode() );

         return result;
    }


}

