/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * ListCommissionEmployee generated by hbm2java
 */
@Entity
@Table(name="`list_commission_employee`"
)

public class ListCommissionEmployee  implements java.io.Serializable {

    private Integer idListCommissionEmployee;
    private Boolean active;
    private Double commissionSalesPercentage;
    private String observation;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Commission commission;
    private Currency currency;
    private Employee employee;

    public ListCommissionEmployee() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_list_commission_employee`", nullable=false, precision=10)
    public Integer getIdListCommissionEmployee() {
        return this.idListCommissionEmployee;
    }
    
    public void setIdListCommissionEmployee(Integer idListCommissionEmployee) {
        this.idListCommissionEmployee = idListCommissionEmployee;
    }

    

    @Column(name="`active`", nullable=false)
    public Boolean getActive() {
        return this.active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }

    

    @Column(name="`commission_sales_percentage`", nullable=false, scale=4)
    public Double getCommissionSalesPercentage() {
        return this.commissionSalesPercentage;
    }
    
    public void setCommissionSalesPercentage(Double commissionSalesPercentage) {
        this.commissionSalesPercentage = commissionSalesPercentage;
    }

    

    @Column(name="`observation`")
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_commission`", nullable=false)
    public Commission getCommission() {
        return this.commission;
    }
    
    public void setCommission(Commission commission) {
        this.commission = commission;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_currency`", nullable=false)
    public Currency getCurrency() {
        return this.currency;
    }
    
    public void setCurrency(Currency currency) {
        this.currency = currency;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_employee`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof ListCommissionEmployee) )
		    return false;

		 ListCommissionEmployee that = (ListCommissionEmployee) o;

		 return ( (this.getIdListCommissionEmployee()==that.getIdListCommissionEmployee()) || ( this.getIdListCommissionEmployee()!=null && that.getIdListCommissionEmployee()!=null && this.getIdListCommissionEmployee().equals(that.getIdListCommissionEmployee()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdListCommissionEmployee() == null ? 0 : this.getIdListCommissionEmployee().hashCode() );

         return result;
    }


}

