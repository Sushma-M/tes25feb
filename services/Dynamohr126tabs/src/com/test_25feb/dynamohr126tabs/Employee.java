/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="`employee`"
)

public class Employee  implements java.io.Serializable {

    private Integer idEmployee;
    private String uuid;
    private String firstName;
    private String secondName;
    private String surname;
    private String secondSurname;
    private String marriageName;


@Type(type="DateTime")
    private LocalDateTime workStartDate;
    private Character sex;
    private String identityNumber;


@Type(type="DateTime")
    private LocalDateTime birthDate;
    private String email;
    private String observation;
    private Boolean completeRegistration;
    private Boolean activeEmployee;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private Set<VacationDayDebit> vacationDayDebits = new HashSet<VacationDayDebit>(0);
    private Set<EmployeeWorkDay> employeeWorkDays = new HashSet<EmployeeWorkDay>(0);
    private Set<EmployeeWorkProof> employeeWorkProofs = new HashSet<EmployeeWorkProof>(0);
    private Set<BadgeEmployee> badgeEmployees = new HashSet<BadgeEmployee>(0);
    private Set<ListEmployeePosition> listEmployeePositions = new HashSet<ListEmployeePosition>(0);
    private Set<EmployeeFileLocation> employeeFileLocations = new HashSet<EmployeeFileLocation>(0);
    private Set<EmployeeTraining> employeeTrainings = new HashSet<EmployeeTraining>(0);
    private Set<EmployeePhotoFile> employeePhotoFiles = new HashSet<EmployeePhotoFile>(0);
    private Set<CompensatoryDayDebit> compensatoryDayDebits = new HashSet<CompensatoryDayDebit>(0);
    private Set<ListEmployeePhone> listEmployeePhones = new HashSet<ListEmployeePhone>(0);
    private Set<EmployeePersonalReference> employeePersonalReferences = new HashSet<EmployeePersonalReference>(0);
    private Set<EmployeeLaborHistory> employeeLaborHistories = new HashSet<EmployeeLaborHistory>(0);
    private Set<AssetAssignDocument> assetAssignDocuments = new HashSet<AssetAssignDocument>(0);
    private ApplicantToPosition applicantToPosition;
    private Country country;
    private TypeEmployeeStatus typeEmployeeStatus;
    private TypeMaritalStatus typeMaritalStatus;
    private TypeRecruitment typeRecruitment;
    private Set<AssetDischargeDocument> assetDischargeDocuments = new HashSet<AssetDischargeDocument>(0);
    private Set<Loan> loans = new HashSet<Loan>(0);
    private Set<EmployeeSalary> employeeSalaries = new HashSet<EmployeeSalary>(0);
    private Set<TravelEmployee> travelEmployees = new HashSet<TravelEmployee>(0);
    private Set<PayrollDetail> payrollDetails = new HashSet<PayrollDetail>(0);
    private Set<EmployeeFile> employeeFiles = new HashSet<EmployeeFile>(0);
    private Set<EmployeeTermination> employeeTerminations = new HashSet<EmployeeTermination>(0);
    private Set<CompensatoryDayCredit> compensatoryDayCredits = new HashSet<CompensatoryDayCredit>(0);
    private Set<ScheduleDynamic> scheduleDynamics = new HashSet<ScheduleDynamic>(0);
    private Set<EmployeeGeneralDetail> employeeGeneralDetails = new HashSet<EmployeeGeneralDetail>(0);
    private Set<OverTimeEmployee> overTimeEmployees = new HashSet<OverTimeEmployee>(0);
    private Set<ListCommissionEmployee> listCommissionEmployees = new HashSet<ListCommissionEmployee>(0);
    private Set<TimeSheet> timeSheets = new HashSet<TimeSheet>(0);
    private Set<EmployeeAssessment> employeeAssessmentsForFkEvaluatedEmployee = new HashSet<EmployeeAssessment>(0);
    private Set<EmployeeAssessment> employeeAssessmentsForFkEvaluatingEmployee = new HashSet<EmployeeAssessment>(0);
    private Set<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees = new HashSet<ListPeriodicDeductionEmployee>(0);
    private Set<IncidenceEmployee> incidenceEmployees = new HashSet<IncidenceEmployee>(0);
    private Set<IsrDetail> isrDetails = new HashSet<IsrDetail>(0);
    private Set<VacationDayCredit> vacationDayCredits = new HashSet<VacationDayCredit>(0);
    private Set<Asset> assets = new HashSet<Asset>(0);
    private Set<EmployeeEducation> employeeEducations = new HashSet<EmployeeEducation>(0);
    private Set<ListPeriodicBonusEmployee> listPeriodicBonusEmployees = new HashSet<ListPeriodicBonusEmployee>(0);
    private Set<JustifiedAbsense> justifiedAbsenses = new HashSet<JustifiedAbsense>(0);
    private Set<EmployeeContract> employeeContracts = new HashSet<EmployeeContract>(0);

    public Employee() {
    }


    @Id 
    

    @Column(name="`id_employee`", nullable=false, precision=10)
    public Integer getIdEmployee() {
        return this.idEmployee;
    }
    
    public void setIdEmployee(Integer idEmployee) {
        this.idEmployee = idEmployee;
    }

    

    @Column(name="`uuid`", nullable=false, length=36)
    public String getUuid() {
        return this.uuid;
    }
    
    public void setUuid(String uuid) {
        this.uuid = uuid;
    }

    

    @Column(name="`first_name`", nullable=false, length=25)
    public String getFirstName() {
        return this.firstName;
    }
    
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    

    @Column(name="`second_name`", length=25)
    public String getSecondName() {
        return this.secondName;
    }
    
    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    

    @Column(name="`surname`", nullable=false, length=25)
    public String getSurname() {
        return this.surname;
    }
    
    public void setSurname(String surname) {
        this.surname = surname;
    }

    

    @Column(name="`second_surname`", length=25)
    public String getSecondSurname() {
        return this.secondSurname;
    }
    
    public void setSecondSurname(String secondSurname) {
        this.secondSurname = secondSurname;
    }

    

    @Column(name="`marriage_name`", length=25)
    public String getMarriageName() {
        return this.marriageName;
    }
    
    public void setMarriageName(String marriageName) {
        this.marriageName = marriageName;
    }

    

    @Column(name="`work_start_date`", nullable=false, length=10)
    public LocalDateTime getWorkStartDate() {
        return this.workStartDate;
    }
    
    public void setWorkStartDate(LocalDateTime workStartDate) {
        this.workStartDate = workStartDate;
    }

    

    @Column(name="`sex`", nullable=false, length=1)
    public Character getSex() {
        return this.sex;
    }
    
    public void setSex(Character sex) {
        this.sex = sex;
    }

    

    @Column(name="`identity_number`", nullable=false, length=25)
    public String getIdentityNumber() {
        return this.identityNumber;
    }
    
    public void setIdentityNumber(String identityNumber) {
        this.identityNumber = identityNumber;
    }

    

    @Column(name="`birth_date`", nullable=false, length=10)
    public LocalDateTime getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(LocalDateTime birthDate) {
        this.birthDate = birthDate;
    }

    

    @Column(name="`email`", nullable=false, length=60)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    

    @Column(name="`observation`")
    public String getObservation() {
        return this.observation;
    }
    
    public void setObservation(String observation) {
        this.observation = observation;
    }

    

    @Column(name="`complete_registration`", nullable=false)
    public Boolean getCompleteRegistration() {
        return this.completeRegistration;
    }
    
    public void setCompleteRegistration(Boolean completeRegistration) {
        this.completeRegistration = completeRegistration;
    }

    

    @Column(name="`active_employee`", nullable=false)
    public Boolean getActiveEmployee() {
        return this.activeEmployee;
    }
    
    public void setActiveEmployee(Boolean activeEmployee) {
        this.activeEmployee = activeEmployee;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<VacationDayDebit> getVacationDayDebits() {
        return this.vacationDayDebits;
    }
    
    public void setVacationDayDebits(Set<VacationDayDebit> vacationDayDebits) {
        this.vacationDayDebits = vacationDayDebits;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeWorkDay> getEmployeeWorkDays() {
        return this.employeeWorkDays;
    }
    
    public void setEmployeeWorkDays(Set<EmployeeWorkDay> employeeWorkDays) {
        this.employeeWorkDays = employeeWorkDays;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeWorkProof> getEmployeeWorkProofs() {
        return this.employeeWorkProofs;
    }
    
    public void setEmployeeWorkProofs(Set<EmployeeWorkProof> employeeWorkProofs) {
        this.employeeWorkProofs = employeeWorkProofs;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<BadgeEmployee> getBadgeEmployees() {
        return this.badgeEmployees;
    }
    
    public void setBadgeEmployees(Set<BadgeEmployee> badgeEmployees) {
        this.badgeEmployees = badgeEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ListEmployeePosition> getListEmployeePositions() {
        return this.listEmployeePositions;
    }
    
    public void setListEmployeePositions(Set<ListEmployeePosition> listEmployeePositions) {
        this.listEmployeePositions = listEmployeePositions;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeFileLocation> getEmployeeFileLocations() {
        return this.employeeFileLocations;
    }
    
    public void setEmployeeFileLocations(Set<EmployeeFileLocation> employeeFileLocations) {
        this.employeeFileLocations = employeeFileLocations;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeTraining> getEmployeeTrainings() {
        return this.employeeTrainings;
    }
    
    public void setEmployeeTrainings(Set<EmployeeTraining> employeeTrainings) {
        this.employeeTrainings = employeeTrainings;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeePhotoFile> getEmployeePhotoFiles() {
        return this.employeePhotoFiles;
    }
    
    public void setEmployeePhotoFiles(Set<EmployeePhotoFile> employeePhotoFiles) {
        this.employeePhotoFiles = employeePhotoFiles;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<CompensatoryDayDebit> getCompensatoryDayDebits() {
        return this.compensatoryDayDebits;
    }
    
    public void setCompensatoryDayDebits(Set<CompensatoryDayDebit> compensatoryDayDebits) {
        this.compensatoryDayDebits = compensatoryDayDebits;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ListEmployeePhone> getListEmployeePhones() {
        return this.listEmployeePhones;
    }
    
    public void setListEmployeePhones(Set<ListEmployeePhone> listEmployeePhones) {
        this.listEmployeePhones = listEmployeePhones;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeePersonalReference> getEmployeePersonalReferences() {
        return this.employeePersonalReferences;
    }
    
    public void setEmployeePersonalReferences(Set<EmployeePersonalReference> employeePersonalReferences) {
        this.employeePersonalReferences = employeePersonalReferences;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeLaborHistory> getEmployeeLaborHistories() {
        return this.employeeLaborHistories;
    }
    
    public void setEmployeeLaborHistories(Set<EmployeeLaborHistory> employeeLaborHistories) {
        this.employeeLaborHistories = employeeLaborHistories;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<AssetAssignDocument> getAssetAssignDocuments() {
        return this.assetAssignDocuments;
    }
    
    public void setAssetAssignDocuments(Set<AssetAssignDocument> assetAssignDocuments) {
        this.assetAssignDocuments = assetAssignDocuments;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_applicant_to_positionp`")
    public ApplicantToPosition getApplicantToPosition() {
        return this.applicantToPosition;
    }
    
    public void setApplicantToPosition(ApplicantToPosition applicantToPosition) {
        this.applicantToPosition = applicantToPosition;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_nationality`", nullable=false)
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_employee_status`", nullable=false)
    public TypeEmployeeStatus getTypeEmployeeStatus() {
        return this.typeEmployeeStatus;
    }
    
    public void setTypeEmployeeStatus(TypeEmployeeStatus typeEmployeeStatus) {
        this.typeEmployeeStatus = typeEmployeeStatus;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_marital_status`", nullable=false)
    public TypeMaritalStatus getTypeMaritalStatus() {
        return this.typeMaritalStatus;
    }
    
    public void setTypeMaritalStatus(TypeMaritalStatus typeMaritalStatus) {
        this.typeMaritalStatus = typeMaritalStatus;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_type_recruitment`", nullable=false)
    public TypeRecruitment getTypeRecruitment() {
        return this.typeRecruitment;
    }
    
    public void setTypeRecruitment(TypeRecruitment typeRecruitment) {
        this.typeRecruitment = typeRecruitment;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<AssetDischargeDocument> getAssetDischargeDocuments() {
        return this.assetDischargeDocuments;
    }
    
    public void setAssetDischargeDocuments(Set<AssetDischargeDocument> assetDischargeDocuments) {
        this.assetDischargeDocuments = assetDischargeDocuments;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<Loan> getLoans() {
        return this.loans;
    }
    
    public void setLoans(Set<Loan> loans) {
        this.loans = loans;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeSalary> getEmployeeSalaries() {
        return this.employeeSalaries;
    }
    
    public void setEmployeeSalaries(Set<EmployeeSalary> employeeSalaries) {
        this.employeeSalaries = employeeSalaries;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<TravelEmployee> getTravelEmployees() {
        return this.travelEmployees;
    }
    
    public void setTravelEmployees(Set<TravelEmployee> travelEmployees) {
        this.travelEmployees = travelEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<PayrollDetail> getPayrollDetails() {
        return this.payrollDetails;
    }
    
    public void setPayrollDetails(Set<PayrollDetail> payrollDetails) {
        this.payrollDetails = payrollDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeFile> getEmployeeFiles() {
        return this.employeeFiles;
    }
    
    public void setEmployeeFiles(Set<EmployeeFile> employeeFiles) {
        this.employeeFiles = employeeFiles;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeTermination> getEmployeeTerminations() {
        return this.employeeTerminations;
    }
    
    public void setEmployeeTerminations(Set<EmployeeTermination> employeeTerminations) {
        this.employeeTerminations = employeeTerminations;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<CompensatoryDayCredit> getCompensatoryDayCredits() {
        return this.compensatoryDayCredits;
    }
    
    public void setCompensatoryDayCredits(Set<CompensatoryDayCredit> compensatoryDayCredits) {
        this.compensatoryDayCredits = compensatoryDayCredits;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ScheduleDynamic> getScheduleDynamics() {
        return this.scheduleDynamics;
    }
    
    public void setScheduleDynamics(Set<ScheduleDynamic> scheduleDynamics) {
        this.scheduleDynamics = scheduleDynamics;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeGeneralDetail> getEmployeeGeneralDetails() {
        return this.employeeGeneralDetails;
    }
    
    public void setEmployeeGeneralDetails(Set<EmployeeGeneralDetail> employeeGeneralDetails) {
        this.employeeGeneralDetails = employeeGeneralDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<OverTimeEmployee> getOverTimeEmployees() {
        return this.overTimeEmployees;
    }
    
    public void setOverTimeEmployees(Set<OverTimeEmployee> overTimeEmployees) {
        this.overTimeEmployees = overTimeEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ListCommissionEmployee> getListCommissionEmployees() {
        return this.listCommissionEmployees;
    }
    
    public void setListCommissionEmployees(Set<ListCommissionEmployee> listCommissionEmployees) {
        this.listCommissionEmployees = listCommissionEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<TimeSheet> getTimeSheets() {
        return this.timeSheets;
    }
    
    public void setTimeSheets(Set<TimeSheet> timeSheets) {
        this.timeSheets = timeSheets;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employeeByFkEvaluatedEmployee")
    public Set<EmployeeAssessment> getEmployeeAssessmentsForFkEvaluatedEmployee() {
        return this.employeeAssessmentsForFkEvaluatedEmployee;
    }
    
    public void setEmployeeAssessmentsForFkEvaluatedEmployee(Set<EmployeeAssessment> employeeAssessmentsForFkEvaluatedEmployee) {
        this.employeeAssessmentsForFkEvaluatedEmployee = employeeAssessmentsForFkEvaluatedEmployee;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employeeByFkEvaluatingEmployee")
    public Set<EmployeeAssessment> getEmployeeAssessmentsForFkEvaluatingEmployee() {
        return this.employeeAssessmentsForFkEvaluatingEmployee;
    }
    
    public void setEmployeeAssessmentsForFkEvaluatingEmployee(Set<EmployeeAssessment> employeeAssessmentsForFkEvaluatingEmployee) {
        this.employeeAssessmentsForFkEvaluatingEmployee = employeeAssessmentsForFkEvaluatingEmployee;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ListPeriodicDeductionEmployee> getListPeriodicDeductionEmployees() {
        return this.listPeriodicDeductionEmployees;
    }
    
    public void setListPeriodicDeductionEmployees(Set<ListPeriodicDeductionEmployee> listPeriodicDeductionEmployees) {
        this.listPeriodicDeductionEmployees = listPeriodicDeductionEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<IncidenceEmployee> getIncidenceEmployees() {
        return this.incidenceEmployees;
    }
    
    public void setIncidenceEmployees(Set<IncidenceEmployee> incidenceEmployees) {
        this.incidenceEmployees = incidenceEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<IsrDetail> getIsrDetails() {
        return this.isrDetails;
    }
    
    public void setIsrDetails(Set<IsrDetail> isrDetails) {
        this.isrDetails = isrDetails;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<VacationDayCredit> getVacationDayCredits() {
        return this.vacationDayCredits;
    }
    
    public void setVacationDayCredits(Set<VacationDayCredit> vacationDayCredits) {
        this.vacationDayCredits = vacationDayCredits;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<Asset> getAssets() {
        return this.assets;
    }
    
    public void setAssets(Set<Asset> assets) {
        this.assets = assets;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeEducation> getEmployeeEducations() {
        return this.employeeEducations;
    }
    
    public void setEmployeeEducations(Set<EmployeeEducation> employeeEducations) {
        this.employeeEducations = employeeEducations;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<ListPeriodicBonusEmployee> getListPeriodicBonusEmployees() {
        return this.listPeriodicBonusEmployees;
    }
    
    public void setListPeriodicBonusEmployees(Set<ListPeriodicBonusEmployee> listPeriodicBonusEmployees) {
        this.listPeriodicBonusEmployees = listPeriodicBonusEmployees;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<JustifiedAbsense> getJustifiedAbsenses() {
        return this.justifiedAbsenses;
    }
    
    public void setJustifiedAbsenses(Set<JustifiedAbsense> justifiedAbsenses) {
        this.justifiedAbsenses = justifiedAbsenses;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeContract> getEmployeeContracts() {
        return this.employeeContracts;
    }
    
    public void setEmployeeContracts(Set<EmployeeContract> employeeContracts) {
        this.employeeContracts = employeeContracts;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Employee) )
		    return false;

		 Employee that = (Employee) o;

		 return ( (this.getIdEmployee()==that.getIdEmployee()) || ( this.getIdEmployee()!=null && that.getIdEmployee()!=null && this.getIdEmployee().equals(that.getIdEmployee()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdEmployee() == null ? 0 : this.getIdEmployee().hashCode() );

         return result;
    }


}

