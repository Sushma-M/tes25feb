/*Copyright (c) 2016-2017 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/

package com.test_25feb.dynamohr126tabs;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * EmployeeMessage generated by hbm2java
 */
@Entity
@Table(name="`employee_message`"
)

public class EmployeeMessage  implements java.io.Serializable {

    private Integer idEmployeeMessage;
    private String issue;
    private String message;
    private Boolean highPriority;
    private Integer modLocation;
    private Integer modUser;
    private Date modDate;
    private User userByFkUserSends;
    private User userByFkUserReceive;

    public EmployeeMessage() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`id_employee_message`", nullable=false, precision=10)
    public Integer getIdEmployeeMessage() {
        return this.idEmployeeMessage;
    }
    
    public void setIdEmployeeMessage(Integer idEmployeeMessage) {
        this.idEmployeeMessage = idEmployeeMessage;
    }

    

    @Column(name="`issue`", nullable=false, length=32)
    public String getIssue() {
        return this.issue;
    }
    
    public void setIssue(String issue) {
        this.issue = issue;
    }

    

    @Column(name="`message`", nullable=false)
    public String getMessage() {
        return this.message;
    }
    
    public void setMessage(String message) {
        this.message = message;
    }

    

    @Column(name="`high_priority`", nullable=false)
    public Boolean getHighPriority() {
        return this.highPriority;
    }
    
    public void setHighPriority(Boolean highPriority) {
        this.highPriority = highPriority;
    }

    

    @Column(name="`mod_location`", nullable=false, precision=10)
    public Integer getModLocation() {
        return this.modLocation;
    }
    
    public void setModLocation(Integer modLocation) {
        this.modLocation = modLocation;
    }

    

    @Column(name="`mod_user`", nullable=false, precision=10)
    public Integer getModUser() {
        return this.modUser;
    }
    
    public void setModUser(Integer modUser) {
        this.modUser = modUser;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`mod_date`", nullable=false, length=19)
    public Date getModDate() {
        return this.modDate;
    }
    
    public void setModDate(Date modDate) {
        this.modDate = modDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_sends`", nullable=false)
    public User getUserByFkUserSends() {
        return this.userByFkUserSends;
    }
    
    public void setUserByFkUserSends(User userByFkUserSends) {
        this.userByFkUserSends = userByFkUserSends;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`fk_user_receive`", nullable=false)
    public User getUserByFkUserReceive() {
        return this.userByFkUserReceive;
    }
    
    public void setUserByFkUserReceive(User userByFkUserReceive) {
        this.userByFkUserReceive = userByFkUserReceive;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof EmployeeMessage) )
		    return false;

		 EmployeeMessage that = (EmployeeMessage) o;

		 return ( (this.getIdEmployeeMessage()==that.getIdEmployeeMessage()) || ( this.getIdEmployeeMessage()!=null && that.getIdEmployeeMessage()!=null && this.getIdEmployeeMessage().equals(that.getIdEmployeeMessage()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getIdEmployeeMessage() == null ? 0 : this.getIdEmployeeMessage().hashCode() );

         return result;
    }


}

